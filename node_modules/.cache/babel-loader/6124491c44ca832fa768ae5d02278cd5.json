{"ast":null,"code":"var _jsxFileName = \"/Users/ngraham/Documents/react-router-swapi/src/components/Films.js\";\nimport React from \"react\";\nimport ReactDOM from 'react-dom';\nvar i = 0;\nvar f = 0; //film counter\n\nexport class Films extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      pictures: []\n    };\n    /*\n        fetch(\"https://swapi.co/api/films\")\n        .then(res => res.json())\n        .then(data => {\n          this.setState({ films: data });\n        })\n        .catch(console.log);*/\n  }\n\n  componentDidMount() {\n    consoloe.log(\"f is\");\n    fetch(\"https://swapi.co/api/films\").then(results => {\n      return results.json();\n    }).then(data => {\n      let pictures = data.results.map(pic => {\n        return React.createElement(\"div\", {\n          key: f++,\n          className: \"allFilms\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, pic.title), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, pic.opening_crawl));\n      });\n      this.setState({\n        pictures: pictures\n      });\n      console.log(\"state\", this.state);\n    });\n  }\n\n  render() {\n    // console.log(\"this is renderrr.... \" + (i++), this.state);\n    return React.createElement(\"div\", {\n      className: \"container2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, this.state.pictures));\n  }\n\n  shouldComponentUpdate() {\n    return true;\n  } //console.log(\"compdidmount\");\n\n  /*\n          var test = Object.keys(this.state).map(function (key) {\n              return <option key={key} value={key}>{this.state[key]}</option>;\n          });*/\n  //}\n\n\n} //ReactDOM.render(<Films />, document.getElementById(\"root\"));\n\nReactDOM.render(React.createElement(\"h2\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 68\n  },\n  __self: this\n}, \"howdy\"), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/ngraham/Documents/react-router-swapi/src/components/Films.js"],"names":["React","ReactDOM","i","f","Films","Component","constructor","props","state","pictures","componentDidMount","consoloe","log","fetch","then","results","json","data","map","pic","title","opening_crawl","setState","console","render","shouldComponentUpdate","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,IAAIC,CAAC,GAAG,CAAR;AACA,IAAIC,CAAC,GAAG,CAAR,C,CAAW;;AAEX,OAAO,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,SAA1B,CAAoC;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAGJ;;;;;;;AAOG;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,QAAQ,CAACC,GAAT,CAAa,MAAb;AACFC,IAAAA,KAAK,CAAC,4BAAD,CAAL,CACCC,IADD,CACMC,OAAO,IAAI;AACb,aAAOA,OAAO,CAACC,IAAR,EAAP;AACH,KAHD,EAGIF,IAHJ,CAGUG,IAAI,IAAI;AACd,UAAIR,QAAQ,GAAGQ,IAAI,CAACF,OAAL,CAAaG,GAAb,CAAkBC,GAAD,IAAS;AACrC,eACI;AAAK,UAAA,GAAG,EAAEhB,CAAC,EAAX;AAAe,UAAA,SAAS,EAAC,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKgB,GAAG,CAACC,KAAT,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAID,GAAG,CAACE,aAAR,CAFJ,CADJ;AAMH,OAPc,CAAf;AAQA,WAAKC,QAAL,CAAc;AAACb,QAAAA,QAAQ,EAAEA;AAAX,OAAd;AACAc,MAAAA,OAAO,CAACX,GAAR,CAAY,OAAZ,EAAoB,KAAKJ,KAAzB;AACH,KAdD;AAeD;;AAEDgB,EAAAA,MAAM,GAAG;AACN;AACD,WACJ;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKhB,KAAL,CAAWC,QADhB,CADJ,CADI;AAOC;;AAEDgB,EAAAA,qBAAqB,GAAG;AACpB,WAAO,IAAP;AACH,GA/CsC,CAiD3C;;AACA;;;;AAKE;;;AAvDyC,C,CA4D3C;;AACAxB,QAAQ,CAACuB,MAAT,CAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAhB,EAAgCE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAhC","sourcesContent":["import React from \"react\";\nimport ReactDOM from 'react-dom';\n\nvar i = 0;\nvar f = 0; //film counter\n\nexport class Films extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n        pictures: [],\n    };\n/*\n    fetch(\"https://swapi.co/api/films\")\n    .then(res => res.json())\n    .then(data => {\n      this.setState({ films: data });\n    })\n    .catch(console.log);*/\n  }\n\n  componentDidMount() {\n      consoloe.log(\"f is\")\n    fetch(\"https://swapi.co/api/films\")\n    .then(results => {\n        return results.json();\n    }). then (data => { \n        let pictures = data.results.map((pic) => {\n            return (\n                <div key={f++} className=\"allFilms\">\n                    <h2>{pic.title}</h2>\n                    <p>{pic.opening_crawl}</p>\n                </div>\n            )\n        })\n        this.setState({pictures: pictures});\n        console.log(\"state\",this.state);\n    })\n  }\n\n  render() {\n     // console.log(\"this is renderrr.... \" + (i++), this.state);\n    return (\n<div className=\"container2\">\n    <div className=\"container1\">\n        {this.state.pictures}\n    </div>\n</div>\n    );\n    }\n\n    shouldComponentUpdate() {\n        return true;\n    }\n\n//console.log(\"compdidmount\");\n/*\n        var test = Object.keys(this.state).map(function (key) {\n            return <option key={key} value={key}>{this.state[key]}</option>;\n        });*/\n\n  //}\n\n\n}\n\n//ReactDOM.render(<Films />, document.getElementById(\"root\"));\nReactDOM.render(<h2>howdy</h2>, document.getElementById(\"root\"));"]},"metadata":{},"sourceType":"module"}