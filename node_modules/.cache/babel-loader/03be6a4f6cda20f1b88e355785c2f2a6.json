{"ast":null,"code":"var _jsxFileName = \"/Users/ngraham/Documents/react-router-swapi/src/components/Films.js\";\nimport React from \"react\";\nimport Loader from 'react-loader-spinner';\nlet c = 0; //film counter\n\nexport class Films extends React.Component {\n  constructor() {\n    super();\n\n    this.fetchSWAPI = () => {\n      fetch(\"https://swapi.co/api/films\").then(results => {\n        return results.json();\n      }).then(data => {\n        let movies = data.results.map(pic => {\n          return React.createElement(\"div\", {\n            key: c++,\n            className: \"allFilms\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 26\n            },\n            __self: this\n          }, React.createElement(\"h2\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 27\n            },\n            __self: this\n          }, pic.title), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 28\n            },\n            __self: this\n          }, pic.opening_crawl));\n        });\n        this.setState({\n          pictures: movies\n        });\n        console.log(movies, \"movies\");\n      }).catch(function (error) {\n        console.log(error.number + \": \" + error.message);\n      }).finally(function () {\n        console.log(\"finished\");\n      });\n    };\n\n    this._isMounted = false;\n    this.state = {\n      pictures: [],\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.fetchSWAPI();\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container1 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Loader, {\n      type: \"ThreeDots\",\n      color: \"\",\n      height: 100,\n      width: 200,\n      timeout: 4000,\n      className: \"loaderCon col-lg-1 col-centered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"container2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, this.state.pictures));\n  }\n\n  shouldComponentUpdate() {\n    return true;\n  } //console.log(\"compdidmount\");\n\n  /*\n          var test = Object.keys(this.state).map(function (key) {\n              return <option key={key} value={key}>{this.state[key]}</option>;\n          });*/\n  //}\n\n\n} //ReactDOM.render(<Films />, document.getElementById(\"root\"));\n//ReactDOM.render(<h2>howdy</h2>, document.getElementById(\"root\"));\n//OLD WAYY \n// import React from \"react\";\n// import ReactDOM from 'react-dom';\n// var c = 0; //film counter\n// export class Films extends React.Component {\n//   constructor(props) {\n//     super();\n//     this.state = {\n//         pictures: [],\n//     };\n// /*\n//     fetch(\"https://swapi.co/api/films\")\n//     .then(res => res.json())\n//     .then(data => {\n//       this.setState({ films: data });\n//     })\n//     .catch(console.log);*/\n// }\n// componentDidMount() {\n//   fetch(\"https://swapi.co/api/films\")\n//   .then(results => {\n//       return results.json();\n//   }). then (data => { \n//       let pictures = data.results.map((pic) => {\n//           return (\n//               <div key={c++} className=\"allFilms\">\n//                   <h2>{pic.title}</h2>\n//                   <p>{pic.opening_crawl}</p>\n//               </div>\n//           )\n//       })\n//       this.setState({pictures: pictures});\n//       console.log(\"state\",this.state);\n//       console.log(\"c is: \" + c);\n//   });\n// }\n// render() {\n//    // console.log(\"this is renderrr.... \" + (i++), this.state);\n//   return (\n// <div className=\"container2\">\n//   <div className=\"container1\">\n//       {this.state.pictures}\n//   </div>\n// </div>\n//   );\n//   }\n//   shouldComponentUpdate() {\n//       return true;\n//   }\n// //console.log(\"compdidmount\");\n// /*\n//       var test = Object.keys(this.state).map(function (key) {\n//           return <option key={key} value={key}>{this.state[key]}</option>;\n//       });*/\n// //}\n// }\n// //ReactDOM.render(<Films />, document.getElementById(\"root\"));\n// ReactDOM.render(<h2>howdy</h2>, document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/ngraham/Documents/react-router-swapi/src/components/Films.js"],"names":["React","Loader","c","Films","Component","constructor","fetchSWAPI","fetch","then","results","json","data","movies","map","pic","title","opening_crawl","setState","pictures","console","log","catch","error","number","message","finally","_isMounted","state","loading","componentDidMount","componentWillUnmount","render","shouldComponentUpdate"],"mappings":"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","sourcesContent":["    import React from \"react\";\n    import Loader from 'react-loader-spinner'\n\n    let c = 0; //film counter\n\nexport class Films extends React.Component {\n    constructor() {\n        super();\n        this._isMounted = false;\n        this.state = {\n            pictures: [],\n            loading: true,\n        };\n\n  }\n\n    fetchSWAPI = () => {\n\n        fetch(\"https://swapi.co/api/films\")\n        .then(results => {\n            return results.json();\n        }).then (data => { \n        let movies = data.results.map((pic) => {\n                        return (\n                    \n                            <div key={c++} className=\"allFilms\">\n                                <h2>{pic.title}</h2>\n                                <p>{pic.opening_crawl}</p>\n                            </div>\n                            \n                        )\n                    })\n                    this.setState({pictures: movies}); \n                    console.log(movies,\"movies\");\n    }).catch(function(error) { console.log(error.number + \": \" + error.message); }).finally(function() { console.log(\"finished\") });\n\n    }\n\n    componentDidMount() {\n        this._isMounted = true;\n          this.fetchSWAPI();\n    }\n\n    componentWillUnmount() {\n      this._isMounted = false;\n    }\n\n    render() {\n        return (\n         <div className=\"container1 \">\n            <div className=\"row\">\n                <Loader\n                        type=\"ThreeDots\"\n                        color=\"\"\n                        height={100}\n                        width={200}\n                        timeout={4000}\n                        className=\"loaderCon col-lg-1 col-centered\"/>\n                    </div>\n                    \n            <div className=\"container2\">\n                {this.state.pictures}\n            </div>\n        </div>\n\n        );\n        }\n\n\n        shouldComponentUpdate() {\n            return true;\n        }\n\n    //console.log(\"compdidmount\");\n    /*\n            var test = Object.keys(this.state).map(function (key) {\n                return <option key={key} value={key}>{this.state[key]}</option>;\n            });*/\n\n    //}\n\n\n    }\n\n    //ReactDOM.render(<Films />, document.getElementById(\"root\"));\n    //ReactDOM.render(<h2>howdy</h2>, document.getElementById(\"root\"));\n\n    //OLD WAYY \n\n    // import React from \"react\";\n    // import ReactDOM from 'react-dom';\n\n    // var c = 0; //film counter\n\n    // export class Films extends React.Component {\n    //   constructor(props) {\n    //     super();\n    //     this.state = {\n    //         pictures: [],\n    //     };\n    // /*\n    //     fetch(\"https://swapi.co/api/films\")\n    //     .then(res => res.json())\n    //     .then(data => {\n    //       this.setState({ films: data });\n    //     })\n    //     .catch(console.log);*/\n    // }\n\n    // componentDidMount() {\n    //   fetch(\"https://swapi.co/api/films\")\n    //   .then(results => {\n    //       return results.json();\n    //   }). then (data => { \n    //       let pictures = data.results.map((pic) => {\n    //           return (\n    //               <div key={c++} className=\"allFilms\">\n    //                   <h2>{pic.title}</h2>\n    //                   <p>{pic.opening_crawl}</p>\n    //               </div>\n    //           )\n    //       })\n    //       this.setState({pictures: pictures});\n    //       console.log(\"state\",this.state);\n    //       console.log(\"c is: \" + c);\n    //   });\n    // }\n\n    // render() {\n    //    // console.log(\"this is renderrr.... \" + (i++), this.state);\n    //   return (\n    // <div className=\"container2\">\n    //   <div className=\"container1\">\n    //       {this.state.pictures}\n    //   </div>\n    // </div>\n    //   );\n    //   }\n\n    //   shouldComponentUpdate() {\n    //       return true;\n    //   }\n\n    // //console.log(\"compdidmount\");\n    // /*\n    //       var test = Object.keys(this.state).map(function (key) {\n    //           return <option key={key} value={key}>{this.state[key]}</option>;\n    //       });*/\n\n    // //}\n\n\n    // }\n\n    // //ReactDOM.render(<Films />, document.getElementById(\"root\"));\n    // ReactDOM.render(<h2>howdy</h2>, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}