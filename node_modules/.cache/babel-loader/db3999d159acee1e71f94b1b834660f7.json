{"ast":null,"code":"import _classCallCheck from\"/Users/ngraham/Documents/react-router-swapi/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/ngraham/Documents/react-router-swapi/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/ngraham/Documents/react-router-swapi/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/ngraham/Documents/react-router-swapi/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/ngraham/Documents/react-router-swapi/node_modules/@babel/runtime/helpers/esm/inherits\";import React from\"react\";import ReactDOM from'react-dom';var i=0;export var Films=/*#__PURE__*/function(_React$Component){_inherits(Films,_React$Component);function Films(props){var _this;_classCallCheck(this,Films);_this=_possibleConstructorReturn(this,_getPrototypeOf(Films).call(this));_this.state={pictures:[]};/*\n    fetch(\"https://swapi.co/api/films\")\n    .then(res => res.json())\n    .then(data => {\n      this.setState({ films: data });\n    })\n    .catch(console.log);*/return _this;}_createClass(Films,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;fetch(\"https://swapi.co/api/films\").then(function(results){return results.json();}).then(function(data){var pictures=data.results.map(function(pic){return React.createElement(\"div\",{key:pic.results,className:\"allFilms\"},React.createElement(\"h2\",null,pic.title),React.createElement(\"p\",null,pic.opening_crawl));});_this2.setState({pictures:pictures});console.log(\"state\",_this2.state);});}},{key:\"render\",value:function render(){// console.log(\"this is renderrr.... \" + (i++), this.state);\nreturn React.createElement(\"div\",{className:\"container2\"},React.createElement(\"div\",{className:\"container1\"},this.state.pictures));}},{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(){return true;}//console.log(\"compdidmount\");\n/*\n        var test = Object.keys(this.state).map(function (key) {\n            return <option key={key} value={key}>{this.state[key]}</option>;\n        });*/ //}\n}]);return Films;}(React.Component);/*\nReactDOM.render(<Films />, document.getElementById('root'));*/","map":{"version":3,"sources":["/Users/ngraham/Documents/react-router-swapi/src/components/Films.js"],"names":["React","ReactDOM","i","Films","props","state","pictures","fetch","then","results","json","data","map","pic","title","opening_crawl","setState","console","log","Component"],"mappings":"ooBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CAEA,GAAIC,CAAAA,CAAC,CAAG,CAAR,CAEA,UAAaC,CAAAA,KAAb,2EACE,eAAYC,KAAZ,CAAmB,uCACjB,yEACA,MAAKC,KAAL,CAAa,CACTC,QAAQ,CAAE,EADD,CAAb,CAGJ;;;;;;0BALqB,aAYlB,CAbH,+EAesB,iBAClBC,KAAK,CAAC,4BAAD,CAAL,CACCC,IADD,CACM,SAAAC,OAAO,CAAI,CACb,MAAOA,CAAAA,OAAO,CAACC,IAAR,EAAP,CACH,CAHD,EAGIF,IAHJ,CAGU,SAAAG,IAAI,CAAI,CACd,GAAIL,CAAAA,QAAQ,CAAGK,IAAI,CAACF,OAAL,CAAaG,GAAb,CAAiB,SAACC,GAAD,CAAS,CACrC,MACI,4BAAK,GAAG,CAAEA,GAAG,CAACJ,OAAd,CAAuB,SAAS,CAAC,UAAjC,EACI,8BAAKI,GAAG,CAACC,KAAT,CADJ,CAEI,6BAAID,GAAG,CAACE,aAAR,CAFJ,CADJ,CAMH,CAPc,CAAf,CAQA,MAAI,CAACC,QAAL,CAAc,CAACV,QAAQ,CAAEA,QAAX,CAAd,EACAW,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAoB,MAAI,CAACb,KAAzB,EACH,CAdD,EAeD,CA/BH,uCAiCW,CACN;AACD,MACJ,4BAAK,SAAS,CAAC,YAAf,EACI,2BAAK,SAAS,CAAC,YAAf,EACK,KAAKA,KAAL,CAAWC,QADhB,CADJ,CADI,CAOC,CA1CL,qEA4C4B,CACpB,MAAO,KAAP,CACH,CAEL;AACA;;;aAjDA,CAsDE;AAtDF,mBAA2BN,KAAK,CAACmB,SAAjC,EA0DA","sourcesContent":["import React from \"react\";\nimport ReactDOM from 'react-dom';\n\nvar i = 0;\n\nexport class Films extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n        pictures: [],\n    };\n/*\n    fetch(\"https://swapi.co/api/films\")\n    .then(res => res.json())\n    .then(data => {\n      this.setState({ films: data });\n    })\n    .catch(console.log);*/\n  }\n\n  componentDidMount() {\n    fetch(\"https://swapi.co/api/films\")\n    .then(results => {\n        return results.json();\n    }). then (data => { \n        let pictures = data.results.map((pic) => {\n            return (\n                <div key={pic.results} className=\"allFilms\">\n                    <h2>{pic.title}</h2>\n                    <p>{pic.opening_crawl}</p>\n                </div>\n            )\n        })\n        this.setState({pictures: pictures});\n        console.log(\"state\",this.state);\n    })\n  }\n\n  render() {\n     // console.log(\"this is renderrr.... \" + (i++), this.state);\n    return (\n<div className=\"container2\">\n    <div className=\"container1\">\n        {this.state.pictures}\n    </div>\n</div>\n    );\n    }\n\n    shouldComponentUpdate() {\n        return true;\n    }\n\n//console.log(\"compdidmount\");\n/*\n        var test = Object.keys(this.state).map(function (key) {\n            return <option key={key} value={key}>{this.state[key]}</option>;\n        });*/\n\n  //}\n\n\n}\n/*\nReactDOM.render(<Films />, document.getElementById('root'));*/"]},"metadata":{},"sourceType":"module"}