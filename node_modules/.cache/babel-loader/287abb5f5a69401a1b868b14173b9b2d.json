{"ast":null,"code":"var _jsxFileName = \"/Users/ngraham/Documents/react-router-swapi/src/components/People.js\";\nimport React from 'react';\nexport class People extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      peoples: []\n    };\n    /*\n        fetch(\"https://swapi.co/api/films\")\n        .then(res => res.json())\n        .then(data => {\n          this.setState({ films: data });\n        })\n        .catch(console.log);*/\n  }\n\n  componentDidMount() {\n    fetch(\"https://swapi.co/api/people\").then(results => {\n      return results.json();\n    }).then(data => {\n      let peoples = data.results.map(ppl => {\n        return React.createElement(\"div\", {\n          key: ppl.results,\n          className: \"allFilms\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, ppl.name), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, ppl.opening_crawl));\n      });\n      this.setState({\n        peoples: peoples\n      });\n      console.log(\"state\", this.state);\n    });\n  }\n\n  render() {\n    // console.log(\"this is renderrr.... \" + (i++), this.state);\n    return React.createElement(\"div\", {\n      className: \"container2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, this.state.pictures));\n  }\n\n  shouldComponentUpdate() {\n    return true;\n  }\n\n}","map":{"version":3,"sources":["/Users/ngraham/Documents/react-router-swapi/src/components/People.js"],"names":["React","People","Component","constructor","props","state","peoples","componentDidMount","fetch","then","results","json","data","map","ppl","name","opening_crawl","setState","console","log","render","pictures","shouldComponentUpdate"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,MAAN,SAAqBD,KAAK,CAACE,SAA3B,CAAqC;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE;AADA,KAAb;AAGJ;;;;;;;AAOG;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,6BAAD,CAAL,CACCC,IADD,CACMC,OAAO,IAAI;AACb,aAAOA,OAAO,CAACC,IAAR,EAAP;AACH,KAHD,EAGIF,IAHJ,CAGUG,IAAI,IAAI;AACd,UAAIN,OAAO,GAAGM,IAAI,CAACF,OAAL,CAAaG,GAAb,CAAkBC,GAAD,IAAS;AACpC,eACI;AAAK,UAAA,GAAG,EAAEA,GAAG,CAACJ,OAAd;AAAuB,UAAA,SAAS,EAAC,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKI,GAAG,CAACC,IAAT,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAID,GAAG,CAACE,aAAR,CAFJ,CADJ;AAMH,OAPa,CAAd;AAQA,WAAKC,QAAL,CAAc;AAACX,QAAAA,OAAO,EAAEA;AAAV,OAAd;AACAY,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoB,KAAKd,KAAzB;AACH,KAdD;AAeD;;AAEDe,EAAAA,MAAM,GAAG;AACN;AACD,WACJ;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKf,KAAL,CAAWgB,QADhB,CADJ,CADI;AAOC;;AAEDC,EAAAA,qBAAqB,GAAG;AACpB,WAAO,IAAP;AACH;;AA9CqC","sourcesContent":["import React from 'react'\n\nexport class People extends React.Component {\n    constructor(props) {\n      super();\n      this.state = {\n          peoples: [],\n      };\n  /*\n      fetch(\"https://swapi.co/api/films\")\n      .then(res => res.json())\n      .then(data => {\n        this.setState({ films: data });\n      })\n      .catch(console.log);*/\n    }\n  \n    componentDidMount() {\n      fetch(\"https://swapi.co/api/people\")\n      .then(results => {\n          return results.json();\n      }). then (data => { \n          let peoples = data.results.map((ppl) => {\n              return (\n                  <div key={ppl.results} className=\"allFilms\">\n                      <h2>{ppl.name}</h2>\n                      <p>{ppl.opening_crawl}</p>\n                  </div>\n              )\n          })\n          this.setState({peoples: peoples});\n          console.log(\"state\",this.state);\n      })\n    }\n  \n    render() {\n       // console.log(\"this is renderrr.... \" + (i++), this.state);\n      return (\n  <div className=\"container2\">\n      <div className=\"container1\">\n          {this.state.pictures}\n      </div>\n  </div>\n      );\n      }\n  \n      shouldComponentUpdate() {\n          return true;\n      }\n    }"]},"metadata":{},"sourceType":"module"}