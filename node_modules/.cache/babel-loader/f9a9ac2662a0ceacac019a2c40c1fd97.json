{"ast":null,"code":"var _jsxFileName = \"/Users/ngraham/Documents/react-router-swapi/src/components/Films.js\";\nimport React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\"; //import LoaderComp from \"./LoaderComp\";\n\nimport uuid from \"uuidv4\";\nexport class Films extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchSWAPI = () => {\n      fetch(\"https://swapi.co/api/films\").then(results => {\n        return results.json();\n      }).then(data => {\n        this.setState({\n          busy: false,\n          testVal: \"this is my altered message, oh no.\"\n        });\n        let movies = data.results.map(pic => {\n          return React.createElement(Container, {\n            key: uuid(),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29\n            },\n            __self: this\n          }, React.createElement(Row, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30\n            },\n            __self: this\n          }, React.createElement(Col, {\n            className: \"allFilms\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31\n            },\n            __self: this\n          }, React.createElement(\"h2\", {\n            className: \"nameOfThing\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32\n            },\n            __self: this\n          }, pic.title), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33\n            },\n            __self: this\n          }, pic.opening_crawl))));\n        });\n        this.setState({\n          movies: movies\n        });\n      }).catch(function (error) {\n        console.log(error);\n      }).finally(function () {\n        console.log(\"finished fetch.\");\n      });\n    };\n\n    this._isMounted = false;\n    this.state = {\n      testVal: \"this is my default message.\",\n      movies: [],\n      busy: this.props.busy,\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.fetchSWAPI();\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    console.log(\"state of busy in dom render is: \", this.state.busy);\n    return React.createElement(\"div\", {\n      className: \"container1 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(LoaderComp, {\n      busy: this.state.busy,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, this.state.movies));\n  } //console.log(\"compdidmount\");\n\n  /*\n            var test = Object.keys(this.state).map(function (key) {\n                return <option key={key} value={key}>{this.state[key]}</option>;\n            });*/\n  //}\n\n\n} //ReactDOM.render(<Films />, document.getElementById(\"root\"));\n//ReactDOM.render(<h2>howdy</h2>, document.getElementById(\"root\"));\n//OLD WAYY\n// import React from \"react\";\n// import ReactDOM from 'react-dom';\n// var c = 0; //film counter\n// export class Films extends React.Component {\n//   constructor(props) {\n//     super();\n//     this.state = {\n//         pictures: [],\n//     };\n// /*\n//     fetch(\"https://swapi.co/api/films\")\n//     .then(res => res.json())\n//     .then(data => {\n//       this.setState({ films: data });\n//     })\n//     .catch(console.log);*/\n// }\n// componentDidMount() {\n//   fetch(\"https://swapi.co/api/films\")\n//   .then(results => {\n//       return results.json();\n//   }). then (data => {\n//       let pictures = data.results.map((pic) => {\n//           return (\n//               <div key={c++} className=\"allFilms\">\n//                   <h2>{pic.title}</h2>\n//                   <p>{pic.opening_crawl}</p>\n//               </div>\n//           )\n//       })\n//       this.setState({pictures: pictures});\n//       console.log(\"state\",this.state);\n//       console.log(\"c is: \" + c);\n//   });\n// }\n// render() {\n//    // console.log(\"this is renderrr.... \" + (i++), this.state);\n//   return (\n// <div className=\"container2\">\n//   <div className=\"container1\">\n//       {this.state.pictures}\n//   </div>\n// </div>\n//   );\n//   }\n//   shouldComponentUpdate() {\n//       return true;\n//   }\n// //console.log(\"compdidmount\");\n// /*\n//       var test = Object.keys(this.state).map(function (key) {\n//           return <option key={key} value={key}>{this.state[key]}</option>;\n//       });*/\n// //}\n// }\n// //ReactDOM.render(<Films />, document.getElementById(\"root\"));\n// ReactDOM.render(<h2>howdy</h2>, document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/ngraham/Documents/react-router-swapi/src/components/Films.js"],"names":["React","Container","Row","Col","uuid","Films","Component","constructor","props","fetchSWAPI","fetch","then","results","json","data","setState","busy","testVal","movies","map","pic","title","opening_crawl","catch","error","console","log","finally","_isMounted","state","loading","componentDidMount","componentWillUnmount","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n//import LoaderComp from \"./LoaderComp\";\nimport uuid from \"uuidv4\";\n\nexport class Films extends React.Component {\n  constructor(props) {\n    super(props);\n    this._isMounted = false;\n    this.state = {\n      testVal: \"this is my default message.\",\n      movies: [],\n      busy: this.props.busy,\n      loading: true\n    };\n  }\n\n  fetchSWAPI = () => {\n    fetch(\"https://swapi.co/api/films\")\n      .then(results => {\n        return results.json();\n      })\n      .then(data => {\n        this.setState({ busy: false, testVal: \"this is my altered message, oh no.\" });\n        let movies = data.results.map(pic => {\n          return (\n            <Container key={uuid()}>\n              <Row>\n                <Col className=\"allFilms\">\n                  <h2 className=\"nameOfThing\">{pic.title}</h2>\n                  <p>{pic.opening_crawl}</p>\n                </Col>\n              </Row>\n            </Container>\n          );\n        });\n        this.setState({\n          movies: movies\n        });\n      })\n      .catch(function(error) {\n        console.log(error);\n      })\n      .finally(function() {\n        console.log(\"finished fetch.\");\n      });\n  };\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.fetchSWAPI();\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    console.log(\"state of busy in dom render is: \", this.state.busy);\n\n    return (\n      <div className=\"container1 \">\n        <LoaderComp busy={this.state.busy}/>\n        <div className=\"container2\">{this.state.movies}</div>\n      </div>\n    );\n  }\n\n  //console.log(\"compdidmount\");\n  /*\n            var test = Object.keys(this.state).map(function (key) {\n                return <option key={key} value={key}>{this.state[key]}</option>;\n            });*/\n\n  //}\n}\n\n//ReactDOM.render(<Films />, document.getElementById(\"root\"));\n//ReactDOM.render(<h2>howdy</h2>, document.getElementById(\"root\"));\n\n//OLD WAYY\n\n// import React from \"react\";\n// import ReactDOM from 'react-dom';\n\n// var c = 0; //film counter\n\n// export class Films extends React.Component {\n//   constructor(props) {\n//     super();\n//     this.state = {\n//         pictures: [],\n//     };\n// /*\n//     fetch(\"https://swapi.co/api/films\")\n//     .then(res => res.json())\n//     .then(data => {\n//       this.setState({ films: data });\n//     })\n//     .catch(console.log);*/\n// }\n\n// componentDidMount() {\n//   fetch(\"https://swapi.co/api/films\")\n//   .then(results => {\n//       return results.json();\n//   }). then (data => {\n//       let pictures = data.results.map((pic) => {\n//           return (\n//               <div key={c++} className=\"allFilms\">\n//                   <h2>{pic.title}</h2>\n//                   <p>{pic.opening_crawl}</p>\n//               </div>\n//           )\n//       })\n//       this.setState({pictures: pictures});\n//       console.log(\"state\",this.state);\n//       console.log(\"c is: \" + c);\n//   });\n// }\n\n// render() {\n//    // console.log(\"this is renderrr.... \" + (i++), this.state);\n//   return (\n// <div className=\"container2\">\n//   <div className=\"container1\">\n//       {this.state.pictures}\n//   </div>\n// </div>\n//   );\n//   }\n\n//   shouldComponentUpdate() {\n//       return true;\n//   }\n\n// //console.log(\"compdidmount\");\n// /*\n//       var test = Object.keys(this.state).map(function (key) {\n//           return <option key={key} value={key}>{this.state[key]}</option>;\n//       });*/\n\n// //}\n\n// }\n\n// //ReactDOM.render(<Films />, document.getElementById(\"root\"));\n// ReactDOM.render(<h2>howdy</h2>, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}