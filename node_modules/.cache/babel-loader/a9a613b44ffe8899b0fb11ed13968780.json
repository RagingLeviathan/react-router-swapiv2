{"ast":null,"code":"var _jsxFileName = \"/Users/ngraham/Documents/react-router-swapi/src/components/Films.js\";\nimport React from \"react\";\nvar i = 0;\nconst myData = {\n  \"key1\": \"value1\",\n  \"key2\": \"value2\",\n  \"key3\": \"value3\",\n  \"key4\": {\n    \"k1\": \"val1\",\n    \"k2\": {\n      \"p1\": \"v1\",\n      \"p2\": \"v2\",\n      \"p3\": \"v3\"\n    }\n  }\n};\n\nconst generateElement = (key, value) => {\n  return React.createElement(\"div\", {\n    key: key,\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-xs-6 ins-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, key), React.createElement(\"div\", {\n    className: \"col-xs-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, value));\n};\n\nfunction generateData(data) {\n  const newData = Object.keys(data).reduce((result, currentKey) => {\n    if (typeof data[currentKey] === 'string' || data[currentKey] instanceof String) {\n      const elementToPush = generateElement(currentKey, data[currentKey]);\n      result.push(elementToPush);\n    } else {\n      const nested = generateData(data[currentKey]);\n      result.push(...nested);\n    }\n\n    return result;\n  }, []);\n  return newData;\n}\n\nexport class Films extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = [{}];\n  }\n\n  static getDerivedStateFromProps() {//do stuff here\n  }\n\n  render() {\n    const _mydata = mydata,\n          data = _mydata.data;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, generateData(data));\n  }\n\n  componentDidMount() {\n    fetch(\"https://swapi.co/api/films/\").then(res => res.json()).then(data => {\n      this.setState({\n        films: data\n      });\n    }).catch(console.log);\n    console.log(\"compdidmount\");\n    /*\n            var test = Object.keys(this.state).map(function (key) {\n                return <option key={key} value={key}>{this.state[key]}</option>;\n            });*/\n  }\n\n  shouldComponentUpdate() {\n    //   console.log(this.state,\"info??\");\n    return true;\n  }\n\n  componentDidUpdate(prevProps, prevState) {}\n\n}","map":{"version":3,"sources":["/Users/ngraham/Documents/react-router-swapi/src/components/Films.js"],"names":["React","i","myData","generateElement","key","value","generateData","data","newData","Object","keys","reduce","result","currentKey","String","elementToPush","push","nested","Films","Component","constructor","props","state","getDerivedStateFromProps","render","mydata","componentDidMount","fetch","then","res","json","setState","films","catch","console","log","shouldComponentUpdate","componentDidUpdate","prevProps","prevState"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAIC,CAAC,GAAG,CAAR;AAEA,MAAMC,MAAM,GAAG;AACX,UAAQ,QADG;AAEX,UAAQ,QAFG;AAGX,UAAQ,QAHG;AAIX,UAAQ;AACN,UAAM,MADA;AAEN,UAAM;AACJ,YAAM,IADF;AAEJ,YAAM,IAFF;AAGJ,YAAM;AAHF;AAFA;AAJG,CAAf;;AAcE,MAAMC,eAAe,GAAG,CAACC,GAAD,EAAKC,KAAL,KAAe;AACrC,SACE;AAAK,IAAA,GAAG,EAAED,GAAV;AAAe,IAAA,SAAS,EAAC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCA,GAArC,CADF,EAEE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BC,KAA3B,CAFF,CADF;AAMD,CAPD;;AASA,SAASC,YAAT,CAAsBC,IAAtB,EAA4B;AAC1B,QAAMC,OAAO,GAAGC,MAAM,CAACC,IAAP,CAAYH,IAAZ,EAAkBI,MAAlB,CAAyB,CAACC,MAAD,EAASC,UAAT,KAAwB;AAC/D,QAAI,OAAON,IAAI,CAACM,UAAD,CAAX,KAA4B,QAA5B,IAAwCN,IAAI,CAACM,UAAD,CAAJ,YAA4BC,MAAxE,EAAgF;AAC9E,YAAMC,aAAa,GAAGZ,eAAe,CAACU,UAAD,EAAaN,IAAI,CAACM,UAAD,CAAjB,CAArC;AACAD,MAAAA,MAAM,CAACI,IAAP,CAAYD,aAAZ;AACD,KAHD,MAGO;AACL,YAAME,MAAM,GAAGX,YAAY,CAACC,IAAI,CAACM,UAAD,CAAL,CAA3B;AACAD,MAAAA,MAAM,CAACI,IAAP,CAAY,GAAGC,MAAf;AACD;;AACD,WAAOL,MAAP;AACD,GATe,EASb,EATa,CAAhB;AAUA,SAAOJ,OAAP;AACD;;AAEH,OAAO,MAAMU,KAAN,SAAoBlB,KAAK,CAACmB,SAA1B,CAAoC;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,CAAC,EAAD,CAAb;AACD;;AAGD,SAAOC,wBAAP,GAAkC,CAChC;AACG;;AAELC,EAAAA,MAAM,GAAG;AAAA,oBACUC,MADV;AAAA,UACClB,IADD,WACCA,IADD;AAEP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,YAAY,CAACC,IAAD,CADf,CADF;AAKC;;AAEHmB,EAAAA,iBAAiB,GAAG;AAElBC,IAAAA,KAAK,CAAC,6BAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMrB,IAAI,IAAI;AACZ,WAAKwB,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAAEzB;AAAT,OAAd;AACD,KAJD,EAKC0B,KALD,CAKOC,OAAO,CAACC,GALf;AAOJD,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA;;;;AAKG;;AAEDC,EAAAA,qBAAqB,GAAG;AACzB;AACK,WAAO,IAAP;AACH;;AAGDC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB,CAC1C;;AA5C0C","sourcesContent":["import React from \"react\";\n\nvar i = 0;\n\nconst myData = {\n    \"key1\": \"value1\",\n    \"key2\": \"value2\",\n    \"key3\": \"value3\",\n    \"key4\": {\n      \"k1\": \"val1\",\n      \"k2\": {\n        \"p1\": \"v1\",\n        \"p2\": \"v2\",\n        \"p3\": \"v3\"\n      }\n    }\n  }\n  \n  const generateElement = (key,value) => {\n    return (\n      <div key={key} className=\"row\">\n        <div className=\"col-xs-6 ins-label\">{key}</div>\n        <div className=\"col-xs-6\">{value}</div>\n      </div>\n    );\n  }\n  \n  function generateData(data) {\n    const newData = Object.keys(data).reduce((result, currentKey) => {\n      if (typeof data[currentKey] === 'string' || data[currentKey] instanceof String) {\n        const elementToPush = generateElement(currentKey, data[currentKey]);\n        result.push(elementToPush);\n      } else {\n        const nested = generateData(data[currentKey]);\n        result.push(...nested);\n      }\n      return result;\n    }, []);\n    return newData;\n  }\n\nexport class Films extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = [{}]  \n  }\n\n\n  static getDerivedStateFromProps() {\n    //do stuff here\n      } \n\n  render() {\n    const { data } = mydata;\n    return (\n      <div>\n        {generateData(data)}        \n      </div>\n    );\n    }\n\n  componentDidMount() {\n\n    fetch(\"https://swapi.co/api/films/\")\n    .then(res => res.json())\n    .then(data => {\n      this.setState({ films: data });\n    })\n    .catch(console.log);\n    \nconsole.log(\"compdidmount\");\n/*\n        var test = Object.keys(this.state).map(function (key) {\n            return <option key={key} value={key}>{this.state[key]}</option>;\n        });*/\n\n  }\n\n  shouldComponentUpdate() {\n //   console.log(this.state,\"info??\");\n      return true;\n  }\n\n\n  componentDidUpdate(prevProps, prevState) {\n}\n}"]},"metadata":{},"sourceType":"module"}