{"ast":null,"code":"import _defineProperty from \"/Users/ngraham/Documents/react-router-swapi/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/ngraham/Documents/react-router-swapi/src/components/LoaderComp.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport Loader from \"react-loader-spinner\";\nlet counter = 0;\nexport default class LoaderComp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      busy: this.props.busy\n    };\n  } //depreciated life cycle\n  // UNSAFE_componentWillReceiveProps({busy}) {\n\n\n  UNSAFE_componentWillReceiveProps({\n    busy\n  }) {\n    this.setState(_objectSpread({}, this.state, {\n      busy\n    }));\n  } //getDerivedStateFromProps & componentDidUpdate are the new lifecycle\n  //replacements for the above\n  // static getDerivedStateFromProps(nextProps, prevState) {\n  //   if (nextProps.busy !== prevState.busy) {\n  //     return { busy: nextProps.busy };\n  //   } else return null;\n  // }\n  // componentDidUpdate(prevProps, prevState) {\n  //  // this.setState({prevProps.busy : prevState.busy});\n  // }\n\n\n  render() {\n    console.log(\"the state of busy in render # \".concat(++counter, \" : \"), this.state.busy);\n    return React.createElement(\"div\", {\n      className: \"container1 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Loader, {\n      type: \"ThreeDots\",\n      color: \"\",\n      height: 50,\n      width: 400,\n      offset: 200,\n      visible: this.state.busy,\n      className: \"loaderCon col-centered spinz\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/ngraham/Documents/react-router-swapi/src/components/LoaderComp.js"],"names":["React","Loader","counter","LoaderComp","Component","constructor","props","state","busy","UNSAFE_componentWillReceiveProps","setState","render","console","log"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,IAAIC,OAAO,GAAG,CAAd;AAEA,eAAe,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AACtDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,KAAKF,KAAL,CAAWE;AADN,KAAb;AAGD,GANqD,CAQtD;AACA;;;AACEC,EAAAA,gCAAgC,CAAC;AAACD,IAAAA;AAAD,GAAD,EAAS;AACzC,SAAKE,QAAL,mBAAkB,KAAKH,KAAvB;AAA6BC,MAAAA;AAA7B;AACD,GAZqD,CActD;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAEAG,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,yCACmC,EAAEX,OADrC,UAEE,KAAKK,KAAL,CAAWC,IAFb;AAIA,WACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,IAAI,EAAC,WADP;AAEE,MAAA,KAAK,EAAC,EAFR;AAGE,MAAA,MAAM,EAAE,EAHV;AAIE,MAAA,KAAK,EAAE,GAJT;AAKE,MAAA,MAAM,EAAE,GALV;AAME,MAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,IANtB;AAOE,MAAA,SAAS,EAAC,8BAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAaD;;AA5CqD","sourcesContent":["import React from \"react\";\nimport Loader from \"react-loader-spinner\";\n\nlet counter = 0;\n\nexport default class LoaderComp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      busy: this.props.busy\n    };\n  }\n\n  //depreciated life cycle\n  // UNSAFE_componentWillReceiveProps({busy}) {\n    UNSAFE_componentWillReceiveProps({busy}) {\n    this.setState({...this.state,busy})\n  }\n\n  //getDerivedStateFromProps & componentDidUpdate are the new lifecycle\n  //replacements for the above\n  // static getDerivedStateFromProps(nextProps, prevState) {\n  //   if (nextProps.busy !== prevState.busy) {\n  //     return { busy: nextProps.busy };\n  //   } else return null;\n  // }\n\n  // componentDidUpdate(prevProps, prevState) {\n  //  // this.setState({prevProps.busy : prevState.busy});\n  // }\n\n  render() {\n    console.log(\n      `the state of busy in render # ${++counter} : `,\n      this.state.busy\n    );\n    return (\n      <div className=\"container1 \">\n        <Loader\n          type=\"ThreeDots\"\n          color=\"\"\n          height={50}\n          width={400}\n          offset={200}\n          visible={this.state.busy}\n          className=\"loaderCon col-centered spinz\"\n        />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}