{"ast":null,"code":"import _classCallCheck from\"/Users/ngraham/Documents/react-router-swapi/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/ngraham/Documents/react-router-swapi/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/ngraham/Documents/react-router-swapi/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/ngraham/Documents/react-router-swapi/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/ngraham/Documents/react-router-swapi/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';export var Planets=/*#__PURE__*/function(_React$Component){_inherits(Planets,_React$Component);function Planets(props){var _this;_classCallCheck(this,Planets);_this=_possibleConstructorReturn(this,_getPrototypeOf(Planets).call(this));_this.state={planets:[]};return _this;}_createClass(Planets,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;fetch(\"https://swapi.co/api/planets/\").then(function(results){return results.json();}).then(function(data){var planets=data.results.map(function(pla){return React.createElement(\"div\",{key:pla.results,className:\"allFilms\"},React.createElement(\"h2\",null,pla.name),React.createElement(\"p\",null,\"Rotation Period: \",pla.rotation_period),React.createElement(\"p\",null,\"Orbital Period: \",pla.orbital_period),React.createElement(\"p\",null,\"Diameter: \",pla.diameter),React.createElement(\"p\",null,\"Climate: \",pla.climate),React.createElement(\"p\",null,\"Gravity: \",pla.gravity),React.createElement(\"p\",null,\"Terrain: \",pla.terrain));});_this2.setState({planets:planets});console.log(\"state\",_this2.state);});}},{key:\"render\",value:function render(){// console.log(\"this is renderrr.... \" + (i++), this.state);\nreturn React.createElement(\"div\",{className:\"container2\"},React.createElement(\"div\",{className:\"container1\"},this.state.planets));}},{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(){return true;}}]);return Planets;}(React.Component);","map":{"version":3,"sources":["/Users/ngraham/Documents/react-router-swapi/src/components/Planets.js"],"names":["React","Planets","props","state","planets","fetch","then","results","json","data","map","pla","name","rotation_period","orbital_period","diameter","climate","gravity","terrain","setState","console","log","Component"],"mappings":"ooBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,UAAaC,CAAAA,OAAb,6EACI,iBAAYC,KAAZ,CAAmB,yCACf,2EACA,MAAKC,KAAL,CAAa,CACTC,OAAO,CAAE,EADA,CAAb,CAFe,aAKhB,CANP,iFAQ0B,iBAChBC,KAAK,CAAC,+BAAD,CAAL,CACCC,IADD,CACM,SAAAC,OAAO,CAAI,CACf,MAAOA,CAAAA,OAAO,CAACC,IAAR,EAAP,CACH,CAHC,EAGCF,IAHD,CAGO,SAAAG,IAAI,CAAI,CACb,GAAIL,CAAAA,OAAO,CAAGK,IAAI,CAACF,OAAL,CAAaG,GAAb,CAAiB,SAACC,GAAD,CAAS,CACpC,MACI,4BAAK,GAAG,CAAEA,GAAG,CAACJ,OAAd,CAAuB,SAAS,CAAC,UAAjC,EACI,8BAAKI,GAAG,CAACC,IAAT,CADJ,CAEI,iDAAqBD,GAAG,CAACE,eAAzB,CAFJ,CAGI,gDAAoBF,GAAG,CAACG,cAAxB,CAHJ,CAII,0CAAcH,GAAG,CAACI,QAAlB,CAJJ,CAKI,yCAAaJ,GAAG,CAACK,OAAjB,CALJ,CAMI,yCAAaL,GAAG,CAACM,OAAjB,CANJ,CAOI,yCAAaN,GAAG,CAACO,OAAjB,CAPJ,CADJ,CAWH,CAZa,CAAd,CAaA,MAAI,CAACC,QAAL,CAAc,CAACf,OAAO,CAAEA,OAAV,CAAd,EACAgB,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAoB,MAAI,CAAClB,KAAzB,EACH,CAnBC,EAoBH,CA7BP,uCA+Be,CACN;AACD,MACJ,4BAAK,SAAS,CAAC,YAAf,EACI,2BAAK,SAAS,CAAC,YAAf,EACK,KAAKA,KAAL,CAAWC,OADhB,CADJ,CADI,CAOC,CAxCT,qEA0CgC,CACpB,MAAO,KAAP,CACH,CA5CT,qBAA6BJ,KAAK,CAACsB,SAAnC","sourcesContent":["import React from 'react'\n\nexport class Planets extends React.Component {\n    constructor(props) {\n        super();\n        this.state = {\n            planets: [],\n        };\n      }\n    \n      componentDidMount() {          \n          fetch(\"https://swapi.co/api/planets/\")\n          .then(results => {\n            return results.json();\n        }).then (data => { \n            let planets = data.results.map((pla) => {\n                return (\n                    <div key={pla.results} className=\"allFilms\">\n                        <h2>{pla.name}</h2>\n                        <p>Rotation Period: {pla.rotation_period}</p>\n                        <p>Orbital Period: {pla.orbital_period}</p>\n                        <p>Diameter: {pla.diameter}</p>\n                        <p>Climate: {pla.climate}</p>\n                        <p>Gravity: {pla.gravity}</p>\n                        <p>Terrain: {pla.terrain}</p>\n                    </div>\n                )\n            })\n            this.setState({planets: planets});\n            console.log(\"state\",this.state);\n        })\n      }\n    \n      render() {\n         // console.log(\"this is renderrr.... \" + (i++), this.state);\n        return (\n    <div className=\"container2\">\n        <div className=\"container1\">\n            {this.state.planets}\n        </div>\n    </div>\n        );\n        }\n    \n        shouldComponentUpdate() {\n            return true;\n        }\n}"]},"metadata":{},"sourceType":"module"}