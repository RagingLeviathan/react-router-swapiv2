{"ast":null,"code":"var _jsxFileName = \"/Users/ngraham/Documents/react-router-swapi/src/components/Films.js\";\nimport React from \"react\";\nimport ReactDOM from 'react-dom';\nvar c = 0; //film counter\n\nexport class Films extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      pictures: []\n    };\n    /*\n        fetch(\"https://swapi.co/api/films\")\n        .then(res => res.json())\n        .then(data => {\n          this.setState({ films: data });\n        })\n        .catch(console.log);*/\n  }\n\n  componentDidMount() {\n    fetch(\"https://swapi.co/api/films\").then(results => {\n      return results.json();\n    }).then(data => {\n      this.setState({\n        pictures: data\n      });\n      console.log(\"state\", this.state);\n      console.log(\"c is: \" + c);\n    });\n  }\n\n  render() {\n    // console.log(\"this is renderrr.... \" + (i++), this.state);\n    return React.createElement(\"div\", {\n      className: \"container2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, this.state.pictures.map(function (name, index) {\n      return React.createElement(\"li\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, name);\n    })));\n  }\n\n  shouldComponentUpdate() {\n    return true;\n  } //console.log(\"compdidmount\");\n\n  /*\n          var test = Object.keys(this.state).map(function (key) {\n              return <option key={key} value={key}>{this.state[key]}</option>;\n          });*/\n  //}\n\n\n} //ReactDOM.render(<Films />, document.getElementById(\"root\"));\n\nReactDOM.render(React.createElement(\"h2\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62\n  },\n  __self: this\n}, \"howdy\"), document.getElementById(\"root\")); //OLD WAYY","map":{"version":3,"sources":["/Users/ngraham/Documents/react-router-swapi/src/components/Films.js"],"names":["React","ReactDOM","c","Films","Component","constructor","props","state","pictures","componentDidMount","fetch","then","results","json","data","setState","console","log","render","map","name","index","shouldComponentUpdate","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,IAAIC,CAAC,GAAG,CAAR,C,CAAW;;AAEX,OAAO,MAAMC,KAAN,SAAoBH,KAAK,CAACI,SAA1B,CAAoC;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAGJ;;;;;;;AAOG;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,4BAAD,CAAL,CACCC,IADD,CACMC,OAAO,IAAI;AACb,aAAOA,OAAO,CAACC,IAAR,EAAP;AACH,KAHD,EAGIF,IAHJ,CAGUG,IAAI,IAAI;AAEd,WAAKC,QAAL,CAAc;AAACP,QAAAA,QAAQ,EAAEM;AAAX,OAAd;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoB,KAAKV,KAAzB;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAWf,CAAvB;AACH,KARD;AASD;;AAEDgB,EAAAA,MAAM,GAAG;AACN;AACD,WACJ;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKX,KAAL,CAAWC,QAAX,CAAoBW,GAApB,CAAwB,UAASC,IAAT,EAAeC,KAAf,EAAqB;AAC9B,aAAO;AAAI,QAAA,GAAG,EAAGA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmBD,IAAnB,CAAP;AACD,KAFd,CADD,CADJ,CADI;AASC;;AAEDE,EAAAA,qBAAqB,GAAG;AACpB,WAAO,IAAP;AACH,GA1CsC,CA4C3C;;AACA;;;;AAKE;;;AAlDyC,C,CAuD3C;;AACArB,QAAQ,CAACiB,MAAT,CAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAhB,EAAgCK,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAhC,E,CAEA","sourcesContent":["import React from \"react\";\nimport ReactDOM from 'react-dom';\n\nvar c = 0; //film counter\n\nexport class Films extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n        pictures: [],\n    };\n/*\n    fetch(\"https://swapi.co/api/films\")\n    .then(res => res.json())\n    .then(data => {\n      this.setState({ films: data });\n    })\n    .catch(console.log);*/\n  }\n\n  componentDidMount() {\n    fetch(\"https://swapi.co/api/films\")\n    .then(results => {\n        return results.json();\n    }). then (data => { \n\n        this.setState({pictures: data});\n        console.log(\"state\",this.state);\n        console.log(\"c is: \" + c);\n    });\n  }\n\n  render() {\n     // console.log(\"this is renderrr.... \" + (i++), this.state);\n    return (\n<div className=\"container2\">\n    <div className=\"container1\">\n    {this.state.pictures.map(function(name, index){\n                    return <li key={ index }>{name}</li>;\n                  })}\n    </div>\n</div>\n    );\n    }\n\n    shouldComponentUpdate() {\n        return true;\n    }\n\n//console.log(\"compdidmount\");\n/*\n        var test = Object.keys(this.state).map(function (key) {\n            return <option key={key} value={key}>{this.state[key]}</option>;\n        });*/\n\n  //}\n\n\n}\n\n//ReactDOM.render(<Films />, document.getElementById(\"root\"));\nReactDOM.render(<h2>howdy</h2>, document.getElementById(\"root\"));\n\n//OLD WAYY \n"]},"metadata":{},"sourceType":"module"}