{"ast":null,"code":"var _jsxFileName = \"/Users/ngraham/Documents/react-router-swapi/src/components/Films.js\";\nimport React from \"react\";\nimport ReactDOM from 'react-dom';\nimport Loader from 'react-loader-spinner'; //import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\n\nvar c = 0; //film counter\n\nexport class Films extends React.Component {\n  constructor(props) {\n    super();\n\n    this.fetchSWAPI = () => {\n      fetch(\"https://swapi.co/api/films\").then(results => {\n        return results.json();\n      }).then(data => {\n        // this.setState({pictures:data});\n        console.log(\"howdy\", typeof this.state.pictures);\n        let pictures = data.results.map(pic => {\n          return React.createElement(\"div\", {\n            key: c++,\n            className: \"allFilms\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36\n            },\n            __self: this\n          }, React.createElement(\"h2\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37\n            },\n            __self: this\n          }, pic.title), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38\n            },\n            __self: this\n          }, pic.opening_crawl));\n        });\n        this.setState({\n          pictures: pictures\n        }); // console.log(\"state\",this.state);\n        //console.log(\"c is: \" + c);\n\n        /*\n                const items = this.state.pictures.map(function(item){\n                        console.log(item.count);\n                        return <li> {items} </li>;\n                    });\n            });//.catch(function(error) { console.log(error.number + \": \" + error.message);*/\n      });\n    };\n\n    this.state = {\n      pictures: [],\n      loading: true\n    };\n    /*\n        fetch(\"https://swapi.co/api/films\")\n        .then(res => res.json())\n        .then(data => {\n        this.setState({ films: data });\n        })\n        .catch(console.log);*/\n  }\n\n  componentDidMount() {\n    this.fetchSWAPI();\n  }\n\n  render() {\n    //console.log(\"howdy\",this.state.pictures);\n    //   const items = this.state.pictures.map(function(item){\n    //       console.log(item.count);\n    //     return <li> {item} </li>;\n    //   });\n\n    /*\n    this.state.pictures.map((_,columnIndex) => pictures.map(\n    picture => picture[columnIndex])\n    );\n    console.log(this.state.pictures);*/\n    //if (this.state.loading) return <Loader />;\n    return React.createElement(\"div\", {\n      className: \"container1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Loader, {\n      type: \"ThreeDots\",\n      color: \"\",\n      height: 200,\n      width: 200,\n      timeout: 1800,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, this.state.pictures));\n  }\n\n  shouldComponentUpdate() {\n    return true;\n  } //console.log(\"compdidmount\");\n\n  /*\n          var test = Object.keys(this.state).map(function (key) {\n              return <option key={key} value={key}>{this.state[key]}</option>;\n          });*/\n  //}\n\n\n} //ReactDOM.render(<Films />, document.getElementById(\"root\"));\n//ReactDOM.render(<h2>howdy</h2>, document.getElementById(\"root\"));\n//OLD WAYY \n// import React from \"react\";\n// import ReactDOM from 'react-dom';\n// var c = 0; //film counter\n// export class Films extends React.Component {\n//   constructor(props) {\n//     super();\n//     this.state = {\n//         pictures: [],\n//     };\n// /*\n//     fetch(\"https://swapi.co/api/films\")\n//     .then(res => res.json())\n//     .then(data => {\n//       this.setState({ films: data });\n//     })\n//     .catch(console.log);*/\n// }\n// componentDidMount() {\n//   fetch(\"https://swapi.co/api/films\")\n//   .then(results => {\n//       return results.json();\n//   }). then (data => { \n//       let pictures = data.results.map((pic) => {\n//           return (\n//               <div key={c++} className=\"allFilms\">\n//                   <h2>{pic.title}</h2>\n//                   <p>{pic.opening_crawl}</p>\n//               </div>\n//           )\n//       })\n//       this.setState({pictures: pictures});\n//       console.log(\"state\",this.state);\n//       console.log(\"c is: \" + c);\n//   });\n// }\n// render() {\n//    // console.log(\"this is renderrr.... \" + (i++), this.state);\n//   return (\n// <div className=\"container2\">\n//   <div className=\"container1\">\n//       {this.state.pictures}\n//   </div>\n// </div>\n//   );\n//   }\n//   shouldComponentUpdate() {\n//       return true;\n//   }\n// //console.log(\"compdidmount\");\n// /*\n//       var test = Object.keys(this.state).map(function (key) {\n//           return <option key={key} value={key}>{this.state[key]}</option>;\n//       });*/\n// //}\n// }\n// //ReactDOM.render(<Films />, document.getElementById(\"root\"));\n// ReactDOM.render(<h2>howdy</h2>, document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/ngraham/Documents/react-router-swapi/src/components/Films.js"],"names":["React","ReactDOM","Loader","c","Films","Component","constructor","props","fetchSWAPI","fetch","then","results","json","data","console","log","state","pictures","map","pic","title","opening_crawl","setState","loading","componentDidMount","render","shouldComponentUpdate"],"mappings":";AAAI,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,MAAP,MAAmB,sBAAnB,C,CACA;;AAEA,IAAIC,CAAC,GAAG,CAAR,C,CAAW;;AAEX,OAAO,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,SAA1B,CAAoC;AAC3CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf;;AADe,SAenBC,UAfmB,GAeN,MAAM;AAEfC,MAAAA,KAAK,CAAC,4BAAD,CAAL,CACCC,IADD,CACMC,OAAO,IAAI;AACb,eAAOA,OAAO,CAACC,IAAR,EAAP;AACH,OAHD,EAGIF,IAHJ,CAGUG,IAAI,IAAI;AAClB;AACIC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoB,OAAO,KAAKC,KAAL,CAAWC,QAAtC;AAEJ,YAAIA,QAAQ,GAAGJ,IAAI,CAACF,OAAL,CAAaO,GAAb,CAAkBC,GAAD,IAAS;AACzB,iBAEI;AAAK,YAAA,GAAG,EAAEhB,CAAC,EAAX;AAAe,YAAA,SAAS,EAAC,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAKgB,GAAG,CAACC,KAAT,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAID,GAAG,CAACE,aAAR,CAFJ,CAFJ;AAQH,SATE,CAAf;AAUY,aAAKC,QAAL,CAAc;AAACL,UAAAA,QAAQ,EAAEA;AAAX,SAAd,EAdM,CAgBlB;AACI;;AACR;;;;;;AAMC,OA3BG;AA6BH,KA9CkB;;AAEf,SAAKD,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,EADD;AAETM,MAAAA,OAAO,EAAE;AAFA,KAAb;AAIJ;;;;;;;AAOC;;AAoCDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKhB,UAAL;AACH;;AAEDiB,EAAAA,MAAM,GAAG;AACL;AACA;AACA;AACA;AACA;;AACA;;;;;AAOJ;AACI,WACC;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACD,oBAAC,MAAD;AACQ,MAAA,IAAI,EAAC,WADb;AAEQ,MAAA,KAAK,EAAC,EAFd;AAGQ,MAAA,MAAM,EAAE,GAHhB;AAIQ,MAAA,KAAK,EAAE,GAJf;AAKQ,MAAA,OAAO,EAAE,IALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADC,EAOD;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKT,KAAL,CAAWC,QADhB,CAPC,CADD;AAcC;;AAGDS,EAAAA,qBAAqB,GAAG;AACpB,WAAO,IAAP;AACH,GAvFsC,CAyF3C;;AACA;;;;AAKA;;;AA/F2C,C,CAoG3C;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAEA;AACA","sourcesContent":["    import React from \"react\";\n    import ReactDOM from 'react-dom';\n    import Loader from 'react-loader-spinner'\n    //import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\n\n    var c = 0; //film counter\n\n    export class Films extends React.Component {\n    constructor(props) {\n        super();\n        this.state = {\n            pictures: [],\n            loading: true\n        };\n    /*\n        fetch(\"https://swapi.co/api/films\")\n        .then(res => res.json())\n        .then(data => {\n        this.setState({ films: data });\n        })\n        .catch(console.log);*/\n    }\n\n    fetchSWAPI = () => {\n\n        fetch(\"https://swapi.co/api/films\")\n        .then(results => {\n            return results.json();\n        }). then (data => { \n        // this.setState({pictures:data});\n            console.log(\"howdy\",typeof(this.state.pictures));\n\n        let pictures = data.results.map((pic) => {\n                        return (\n                    \n                            <div key={c++} className=\"allFilms\">\n                                <h2>{pic.title}</h2>\n                                <p>{pic.opening_crawl}</p>\n                            </div>\n                            \n                        )\n                    })\n                    this.setState({pictures: pictures}); \n\n        // console.log(\"state\",this.state);\n            //console.log(\"c is: \" + c);\n    /*\n            const items = this.state.pictures.map(function(item){\n                    console.log(item.count);\n                    return <li> {items} </li>;\n                });\n        });//.catch(function(error) { console.log(error.number + \": \" + error.message);*/\n    });\n\n    }\n\n\n    componentDidMount() {\n        this.fetchSWAPI();\n    }\n\n    render() {\n        //console.log(\"howdy\",this.state.pictures);\n        //   const items = this.state.pictures.map(function(item){\n        //       console.log(item.count);\n        //     return <li> {item} </li>;\n        //   });\n        /*\n    this.state.pictures.map((_,columnIndex) => pictures.map(\n        picture => picture[columnIndex])\n    );\n    console.log(this.state.pictures);*/\n\n\n    //if (this.state.loading) return <Loader />;\n        return (\n         <div className=\"container1\">\n        <Loader\n                type=\"ThreeDots\"\n                color=\"\"\n                height={200}\n                width={200}\n                timeout={1800}/>\n        <div className=\"container2\">\n            {this.state.pictures}\n        </div>\n        </div>\n\n        );\n        }\n\n\n        shouldComponentUpdate() {\n            return true;\n        }\n\n    //console.log(\"compdidmount\");\n    /*\n            var test = Object.keys(this.state).map(function (key) {\n                return <option key={key} value={key}>{this.state[key]}</option>;\n            });*/\n\n    //}\n\n\n    }\n\n    //ReactDOM.render(<Films />, document.getElementById(\"root\"));\n    //ReactDOM.render(<h2>howdy</h2>, document.getElementById(\"root\"));\n\n    //OLD WAYY \n\n    // import React from \"react\";\n    // import ReactDOM from 'react-dom';\n\n    // var c = 0; //film counter\n\n    // export class Films extends React.Component {\n    //   constructor(props) {\n    //     super();\n    //     this.state = {\n    //         pictures: [],\n    //     };\n    // /*\n    //     fetch(\"https://swapi.co/api/films\")\n    //     .then(res => res.json())\n    //     .then(data => {\n    //       this.setState({ films: data });\n    //     })\n    //     .catch(console.log);*/\n    // }\n\n    // componentDidMount() {\n    //   fetch(\"https://swapi.co/api/films\")\n    //   .then(results => {\n    //       return results.json();\n    //   }). then (data => { \n    //       let pictures = data.results.map((pic) => {\n    //           return (\n    //               <div key={c++} className=\"allFilms\">\n    //                   <h2>{pic.title}</h2>\n    //                   <p>{pic.opening_crawl}</p>\n    //               </div>\n    //           )\n    //       })\n    //       this.setState({pictures: pictures});\n    //       console.log(\"state\",this.state);\n    //       console.log(\"c is: \" + c);\n    //   });\n    // }\n\n    // render() {\n    //    // console.log(\"this is renderrr.... \" + (i++), this.state);\n    //   return (\n    // <div className=\"container2\">\n    //   <div className=\"container1\">\n    //       {this.state.pictures}\n    //   </div>\n    // </div>\n    //   );\n    //   }\n\n    //   shouldComponentUpdate() {\n    //       return true;\n    //   }\n\n    // //console.log(\"compdidmount\");\n    // /*\n    //       var test = Object.keys(this.state).map(function (key) {\n    //           return <option key={key} value={key}>{this.state[key]}</option>;\n    //       });*/\n\n    // //}\n\n\n    // }\n\n    // //ReactDOM.render(<Films />, document.getElementById(\"root\"));\n    // ReactDOM.render(<h2>howdy</h2>, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}