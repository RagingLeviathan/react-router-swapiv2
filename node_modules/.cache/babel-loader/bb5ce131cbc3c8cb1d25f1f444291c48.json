{"ast":null,"code":"var _jsxFileName = \"/Users/ngraham/Documents/react-router-swapi/src/components/Films.js\";\nimport React from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport uuid from \"uuidv4\";\nlet timingReq = 0;\nlet time = 4000;\nlet timey = 9;\nexport class Films extends React.Component {\n  constructor() {\n    super();\n\n    this.fetchSWAPI = () => {\n      fetch(\"https://swapi.co/api/films\", {\n        time: true\n      }).then(results => {\n        // this.measureASyncFunc();\n        return results.json();\n      }).then(data => {\n        console.log(\"time in then is type: \", typeof time);\n        console.log(\"timey iss: \", timey);\n        let movies = data.results.map(pic => {\n          return React.createElement(\"div\", {\n            key: uuid(),\n            className: \"allFilms\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          }, React.createElement(\"h2\", {\n            className: \"nameOfThing\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56\n            },\n            __self: this\n          }, pic.title), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          }, pic.opening_crawl));\n        });\n        this.setState({\n          pictures: movies\n        });\n        console.log(movies, \"movies\");\n      }).catch(function (error) {\n        console.log(error.number + \": \" + error.message);\n      }).finally(function () {\n        console.log(\"finished\");\n      });\n    };\n\n    this._isMounted = false;\n    this.state = {\n      pictures: [],\n      loading: true\n    };\n  }\n\n  checkTime() {\n    let request = require('request');\n\n    let returnedTime = 0;\n    request.get({\n      url: 'https://swapi.co/api/films',\n      time: true\n    }, function (err, response) {\n      returnedTime = response.elapsedTime; //console.log(\"returned time is: \",returnedTime);\n\n      return returnedTime;\n    });\n  } //   measureASyncFunc = (function(res) => {\n  //     const start = Date.now();\n  //     return res.catch(() => {})\n  //     .then(() => {\n  //         const end = Date.now();\n  //         const elapsed = end-start;\n  //         return elapsed;\n  //     });\n  //   })\n\n\n  showPage() {\n    document.getElementById(\"container2\").style.display = \"block\";\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.fetchSWAPI();\n\n    if (timingReq !== 0) {\n      time = timingReq;\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    console.log(\"time in render is type: \", typeof time);\n    return React.createElement(\"div\", {\n      className: \"container1 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Loader, {\n      type: \"ThreeDots\",\n      color: \"\",\n      height: 100,\n      width: 460,\n      offset: 100,\n      timeout: time,\n      className: \"loaderCon col-centered spinz\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container2\",\n      style: {\n        display: none\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, this.state.pictures));\n  } //console.log(\"compdidmount\");\n\n  /*\n            var test = Object.keys(this.state).map(function (key) {\n                return <option key={key} value={key}>{this.state[key]}</option>;\n            });*/\n  //}\n\n\n} //ReactDOM.render(<Films />, document.getElementById(\"root\"));\n//ReactDOM.render(<h2>howdy</h2>, document.getElementById(\"root\"));\n//OLD WAYY\n// import React from \"react\";\n// import ReactDOM from 'react-dom';\n// var c = 0; //film counter\n// export class Films extends React.Component {\n//   constructor(props) {\n//     super();\n//     this.state = {\n//         pictures: [],\n//     };\n// /*\n//     fetch(\"https://swapi.co/api/films\")\n//     .then(res => res.json())\n//     .then(data => {\n//       this.setState({ films: data });\n//     })\n//     .catch(console.log);*/\n// }\n// componentDidMount() {\n//   fetch(\"https://swapi.co/api/films\")\n//   .then(results => {\n//       return results.json();\n//   }). then (data => {\n//       let pictures = data.results.map((pic) => {\n//           return (\n//               <div key={c++} className=\"allFilms\">\n//                   <h2>{pic.title}</h2>\n//                   <p>{pic.opening_crawl}</p>\n//               </div>\n//           )\n//       })\n//       this.setState({pictures: pictures});\n//       console.log(\"state\",this.state);\n//       console.log(\"c is: \" + c);\n//   });\n// }\n// render() {\n//    // console.log(\"this is renderrr.... \" + (i++), this.state);\n//   return (\n// <div className=\"container2\">\n//   <div className=\"container1\">\n//       {this.state.pictures}\n//   </div>\n// </div>\n//   );\n//   }\n//   shouldComponentUpdate() {\n//       return true;\n//   }\n// //console.log(\"compdidmount\");\n// /*\n//       var test = Object.keys(this.state).map(function (key) {\n//           return <option key={key} value={key}>{this.state[key]}</option>;\n//       });*/\n// //}\n// }\n// //ReactDOM.render(<Films />, document.getElementById(\"root\"));\n// ReactDOM.render(<h2>howdy</h2>, document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/ngraham/Documents/react-router-swapi/src/components/Films.js"],"names":["React","Loader","uuid","timingReq","time","timey","Films","Component","constructor","fetchSWAPI","fetch","then","results","json","data","console","log","movies","map","pic","title","opening_crawl","setState","pictures","catch","error","number","message","finally","_isMounted","state","loading","checkTime","request","require","returnedTime","get","url","err","response","elapsedTime","showPage","document","getElementById","style","display","componentDidMount","componentWillUnmount","render","none"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport uuid from \"uuidv4\";\n\nlet timingReq = 0;\nlet time = 4000;\nlet timey = 9;\n\nexport class Films extends React.Component {\n  constructor() {\n    super();\n    this._isMounted = false;\n    this.state = {\n      pictures: [],\n      loading: true\n    };\n  }\n\n  checkTime() {\n    let request = require('request');\n    let returnedTime = 0;\n    request.get({ url: 'https://swapi.co/api/films', time: true }, (function (err, response) {\n        returnedTime = response.elapsedTime;\n        //console.log(\"returned time is: \",returnedTime);\n       return returnedTime;\n    }));\n  }\n\n//   measureASyncFunc = (function(res) => {\n//     const start = Date.now();\n//     return res.catch(() => {})\n//     .then(() => {\n//         const end = Date.now();\n//         const elapsed = end-start;\n//         return elapsed;\n//     });\n//   })\n\n\nshowPage() {\n    document.getElementById(\"container2\").style.display = \"block\";\n  }\n  fetchSWAPI = () => {\n\n        fetch(\"https://swapi.co/api/films\", {time:true})\n      .then(results => {\n       // this.measureASyncFunc();\n        return results.json();\n      })\n      .then(data => {\n          console.log(\"time in then is type: \", typeof(time));\n          console.log(\"timey iss: \", timey);\n        let movies = data.results.map(pic => {\n          return (\n            <div key={uuid()} className=\"allFilms\">\n              <h2 className=\"nameOfThing\">{pic.title}</h2>\n              <p>{pic.opening_crawl}</p>\n            </div>\n          );\n        });\n        this.setState({ pictures: movies });\n        console.log(movies, \"movies\");\n      })\n      .catch(function(error) {\n        console.log(error.number + \": \" + error.message);\n      })\n      .finally(function() {\n        console.log(\"finished\");\n      });\n  };\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.fetchSWAPI();\n    if(timingReq !== 0) {   time = timingReq;   }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    console.log(\"time in render is type: \", typeof(time));\n    return (\n      <div className=\"container1 \">\n        <Loader\n          type=\"ThreeDots\"\n          color=\"\"\n          height={100}\n          width={460}\n          offset={100}\n          timeout={time}\n          className=\"loaderCon col-centered spinz\"\n        />\n\n        <div className=\"container2\" style={{display:none}}>{this.state.pictures}</div>\n      </div>\n    );\n  }\n\n  //console.log(\"compdidmount\");\n  /*\n            var test = Object.keys(this.state).map(function (key) {\n                return <option key={key} value={key}>{this.state[key]}</option>;\n            });*/\n\n  //}\n}\n\n//ReactDOM.render(<Films />, document.getElementById(\"root\"));\n//ReactDOM.render(<h2>howdy</h2>, document.getElementById(\"root\"));\n\n//OLD WAYY\n\n// import React from \"react\";\n// import ReactDOM from 'react-dom';\n\n// var c = 0; //film counter\n\n// export class Films extends React.Component {\n//   constructor(props) {\n//     super();\n//     this.state = {\n//         pictures: [],\n//     };\n// /*\n//     fetch(\"https://swapi.co/api/films\")\n//     .then(res => res.json())\n//     .then(data => {\n//       this.setState({ films: data });\n//     })\n//     .catch(console.log);*/\n// }\n\n// componentDidMount() {\n//   fetch(\"https://swapi.co/api/films\")\n//   .then(results => {\n//       return results.json();\n//   }). then (data => {\n//       let pictures = data.results.map((pic) => {\n//           return (\n//               <div key={c++} className=\"allFilms\">\n//                   <h2>{pic.title}</h2>\n//                   <p>{pic.opening_crawl}</p>\n//               </div>\n//           )\n//       })\n//       this.setState({pictures: pictures});\n//       console.log(\"state\",this.state);\n//       console.log(\"c is: \" + c);\n//   });\n// }\n\n// render() {\n//    // console.log(\"this is renderrr.... \" + (i++), this.state);\n//   return (\n// <div className=\"container2\">\n//   <div className=\"container1\">\n//       {this.state.pictures}\n//   </div>\n// </div>\n//   );\n//   }\n\n//   shouldComponentUpdate() {\n//       return true;\n//   }\n\n// //console.log(\"compdidmount\");\n// /*\n//       var test = Object.keys(this.state).map(function (key) {\n//           return <option key={key} value={key}>{this.state[key]}</option>;\n//       });*/\n\n// //}\n\n// }\n\n// //ReactDOM.render(<Films />, document.getElementById(\"root\"));\n// ReactDOM.render(<h2>howdy</h2>, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}