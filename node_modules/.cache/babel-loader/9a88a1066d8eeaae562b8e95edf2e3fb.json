{"ast":null,"code":"var _jsxFileName = \"/Users/ngraham/Documents/react-router-swapi/src/components/People.js\";\nimport React from \"react\";\nimport Loader from 'react-loader-spinner';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport uuid from 'uuidv4';\nlet pageNum = 1;\nexport class People extends React.Component {\n  constructor(props) {\n    super();\n\n    this.fetchSWAPI = () => {\n      fetch(\"https://swapi.co/api/people/?page=\" + pageNum).then(results => {\n        return results.json();\n      }).then(data => {\n        console.log(data);\n        let next = data.next;\n        console.log(\"next is : \", next); //let str = next.slice(13);\n\n        this.setState({\n          pagination: next\n        });\n        let peoples = data.results.map(pic => {\n          return React.createElement(Container, {\n            key: uuid(),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46\n            },\n            __self: this\n          }, React.createElement(Row, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47\n            },\n            __self: this\n          }, React.createElement(Col, {\n            md: {\n              span: 10,\n              offset: 1\n            },\n            key: uuid(),\n            className: \"allFilms align-self-center\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48\n            },\n            __self: this\n          }, React.createElement(\"h2\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          }, pic.name), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          }, \"Height: \", pic.height), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51\n            },\n            __self: this\n          }, \"Hair Colour: \", pic.hair_color), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            },\n            __self: this\n          }, \"Eye colour: \", pic.eye_color), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          }, \"Gender: \", pic.gender))));\n        });\n        this.setState({\n          peoples: peoples\n        }); //console.log(\"state\", this.state);\n      }).catch(function (error) {\n        console.log(error.number + \": \" + error.message);\n      }).finally(function () {\n        console.log(\"finished\");\n      });\n      ; //}\n    };\n\n    this._isMounted = false;\n    this.state = {\n      peoples: [],\n      page: 0,\n      pagination: []\n    };\n  }\n\n  saySomething(something) {\n    console.log(something);\n  }\n\n  handlePageNext(page) {\n    if (this.page === null) this.page = 1;\n    this.page = +1;\n    pageNum++;\n    console.log(\"pageNum from handle func is: \" + pageNum);\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.fetchSWAPI();\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    //creates virtual DOM... keep render() pure\n    return React.createElement(\"div\", {\n      className: \"container1 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Loader, {\n      type: \"ThreeDots\",\n      color: \"\",\n      height: 100,\n      width: 460,\n      offset: 100,\n      timeout: 4000,\n      className: \"loaderCon col-centered spinz\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"?page=\" + this.state.pagination,\n      onClick: () => this.handlePageNext(this.state.page),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Next page\"), this.state.peoples));\n  }\n\n}","map":{"version":3,"sources":["/Users/ngraham/Documents/react-router-swapi/src/components/People.js"],"names":["React","Loader","Container","Row","Col","uuid","pageNum","People","Component","constructor","props","fetchSWAPI","fetch","then","results","json","data","console","log","next","setState","pagination","peoples","map","pic","span","offset","name","height","hair_color","eye_color","gender","catch","error","number","message","finally","_isMounted","state","page","saySomething","something","handlePageNext","componentDidMount","componentWillUnmount","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Loader from 'react-loader-spinner';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport uuid from 'uuidv4';\n\nlet pageNum = 1;\n\nexport class People extends React.Component {\n    constructor(props) {\n        super();\n        this._isMounted = false;\n        this.state = {\n          peoples: [],\n          page: 0,\n          pagination: []\n        };\n      }\n\n      saySomething(something) {\n        console.log(something);\n    }\n\n    handlePageNext(page) {\n        if(this.page === null)\n         this.page = 1 ;\n        this.page =+ 1;\n        pageNum++;\n        console.log(\"pageNum from handle func is: \" + pageNum);\n    }\n\n    fetchSWAPI = () => {\n      fetch(\"https://swapi.co/api/people/?page=\"+(pageNum))\n      .then(results => {\n        return results.json();\n      })\n      .then(data => {\n        console.log(data);\n        let next = data.next;\n        console.log(\"next is : \", next)\n        //let str = next.slice(13);\n        this.setState({ pagination: next});\n        let peoples = data.results.map(pic => {\n          return (\n            <Container key={uuid()}>\n            <Row>\n              <Col md={{ span: 10, offset: 1 }} key={uuid()} className=\"allFilms align-self-center\">\n              <h2>{pic.name}</h2>\n              <p>Height: {pic.height}</p>\n              <p>Hair Colour: {pic.hair_color}</p>\n              <p>Eye colour: {pic.eye_color}</p>\n              <p>Gender: {pic.gender}</p>\n              </Col>\n</Row>\n</Container>\n          );\n        });\n        this.setState({ peoples: peoples});\n        //console.log(\"state\", this.state);\n      })\n      .catch(function(error) { console.log(error.number + \": \" + error.message); }).finally(function() { console.log(\"finished\") });;\n  //}\n\n\n    }\n\n    \n      componentDidMount() {\n        this._isMounted = true;\n          this.fetchSWAPI();\n\n    }\n\n    componentWillUnmount() {\n      this._isMounted = false;\n    }\n      \n    \n      render() {\n        //creates virtual DOM... keep render() pure\n        return (\n          <div className=\"container1 \">\n              <Loader\n                      type=\"ThreeDots\"\n                      color=\"\"\n                      height={100}\n                      width={460}\n                      offset={100}\n                      timeout={4000}\n                      className=\"loaderCon col-centered spinz\"/>\n            <div className=\"container2\">\n            <a href={\"?page=\" + (this.state.pagination)} onClick={() => this.handlePageNext(this.state.page)}>Next page</a>\n                {this.state.peoples}\n          </div>\n      </div>\n\n        );\n      }\n}\n"]},"metadata":{},"sourceType":"module"}