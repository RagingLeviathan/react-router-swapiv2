{"ast":null,"code":"var _jsxFileName = \"/Users/ngraham/Documents/react-router-swapi/src/components/Films.js\";\nimport React from \"react\";\nimport ReactDOM from 'react-dom';\nvar i = 0;\nexport class Films extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = [{}];\n  }\n\n  static getDerivedStateFromProps() {//do stuff here\n  }\n\n  render() {\n    console.log(this.state, \"hey\", i++);\n    DoFetch();\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"List of things is \");\n  }\n\n  componentDidMount() {\n    console.log(\"compdidmount\");\n    /*\n            var test = Object.keys(this.state).map(function (key) {\n                return <option key={key} value={key}>{this.state[key]}</option>;\n            });*/\n  }\n\n  shouldComponentUpdate() {\n    console.log(this.state, \"info??\");\n    return true;\n  }\n\n  componentDidUpdate(prevProps, prevState) {}\n\n}\nReactDOM.render(React.createElement(Films, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/ngraham/Documents/react-router-swapi/src/components/Films.js"],"names":["React","ReactDOM","i","Films","Component","constructor","props","state","getDerivedStateFromProps","render","console","log","DoFetch","componentDidMount","shouldComponentUpdate","componentDidUpdate","prevProps","prevState","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,IAAIC,CAAC,GAAG,CAAR;AAIA,OAAO,MAAMC,KAAN,SAAoBH,KAAK,CAACI,SAA1B,CAAoC;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,CAAC,EAAD,CAAb;AACD;;AAED,SAAOC,wBAAP,GAAkC,CAChC;AACG;;AAELC,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAjB,EAAwB,KAAxB,EAAgCL,CAAC,EAAjC;AACFU,IAAAA,OAAO;AACP,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAP;AACD;;AAIDC,EAAAA,iBAAiB,GAAG;AAGtBH,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA;;;;AAKG;;AAEDG,EAAAA,qBAAqB,GAAG;AACtBJ,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAjB,EAAuB,QAAvB;AACE,WAAO,IAAP;AACH;;AAGDQ,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB,CAC1C;;AApC0C;AAuC3ChB,QAAQ,CAACQ,MAAT,CACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEIS,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFJ","sourcesContent":["import React from \"react\";\nimport ReactDOM from 'react-dom';\n\nvar i = 0;\n\n\n\nexport class Films extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = [{}]  \n  }\n\n  static getDerivedStateFromProps() {\n    //do stuff here\n      } \n\n  render() {\n      console.log(this.state, \"hey\", (i++));\n    DoFetch();\n    return <p>List of things is </p>;\n  }\n\n\n\n  componentDidMount() {\n\n\nconsole.log(\"compdidmount\");\n/*\n        var test = Object.keys(this.state).map(function (key) {\n            return <option key={key} value={key}>{this.state[key]}</option>;\n        });*/\n\n  }\n\n  shouldComponentUpdate() {\n    console.log(this.state,\"info??\");\n      return true;\n  }\n\n\n  componentDidUpdate(prevProps, prevState) {\n}\n}\n\nReactDOM.render(\n    <Films />,\n    document.getElementById('root')\n  );"]},"metadata":{},"sourceType":"module"}