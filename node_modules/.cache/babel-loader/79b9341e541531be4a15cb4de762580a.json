{"ast":null,"code":"var _jsxFileName = \"/Users/ngraham/Documents/react-router-swapi/src/components/Planets.js\";\nimport React from 'react';\nexport class Planets extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      planets: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://swapi.co/api/planets/\").then(results => {\n      return results.json();\n    }).then(data => {\n      let planets = data.results.map(pla => {\n        return React.createElement(\"div\", {\n          key: pla.results,\n          className: \"allFilms\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, pla.name), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, \"Rotation Period: \", pla.rotation_period), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, \"Orbital Period: \", pla.orbital_period), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, \"Diameter: \", pla.diameter), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, \"Climate: \", pla.climate), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, \"Gravity: \", pla.gravity), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, \"Terrain: \", pla.terrain));\n      });\n      this.setState({\n        planets: planets\n      });\n      console.log(\"state\", this.state);\n    });\n  }\n\n  render() {\n    // console.log(\"this is renderrr.... \" + (i++), this.state);\n    return React.createElement(\"div\", {\n      className: \"container2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, this.state.planets));\n  }\n\n  shouldComponentUpdate() {\n    return true;\n  }\n\n}","map":{"version":3,"sources":["/Users/ngraham/Documents/react-router-swapi/src/components/Planets.js"],"names":["React","Planets","Component","constructor","props","state","planets","componentDidMount","fetch","then","results","json","data","map","pla","name","rotation_period","orbital_period","diameter","climate","gravity","terrain","setState","console","log","render","shouldComponentUpdate"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,OAAN,SAAsBD,KAAK,CAACE,SAA5B,CAAsC;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE;AADA,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,+BAAD,CAAL,CAAuCC,IAAvC,CAA4CC,OAAO,IAAI;AACrD,aAAOA,OAAO,CAACC,IAAR,EAAP;AACH,KAFC,EAECF,IAFD,CAEOG,IAAI,IAAI;AACb,UAAIN,OAAO,GAAGM,IAAI,CAACF,OAAL,CAAaG,GAAb,CAAkBC,GAAD,IAAS;AACpC,eACI;AAAK,UAAA,GAAG,EAAEA,GAAG,CAACJ,OAAd;AAAuB,UAAA,SAAS,EAAC,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKI,GAAG,CAACC,IAAT,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAqBD,GAAG,CAACE,eAAzB,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAoBF,GAAG,CAACG,cAAxB,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAcH,GAAG,CAACI,QAAlB,CAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAaJ,GAAG,CAACK,OAAjB,CALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAaL,GAAG,CAACM,OAAjB,CANJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAaN,GAAG,CAACO,OAAjB,CAPJ,CADJ;AAWH,OAZa,CAAd;AAaA,WAAKC,QAAL,CAAc;AAAChB,QAAAA,OAAO,EAAEA;AAAV,OAAd;AACAiB,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoB,KAAKnB,KAAzB;AACH,KAlBC;AAmBH;;AAEDoB,EAAAA,MAAM,GAAG;AACN;AACD,WACJ;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKpB,KAAL,CAAWC,OADhB,CADJ,CADI;AAOC;;AAEDoB,EAAAA,qBAAqB,GAAG;AACpB,WAAO,IAAP;AACH;;AA3CoC","sourcesContent":["import React from 'react'\n\nexport class Planets extends React.Component {\n    constructor(props) {\n        super();\n        this.state = {\n            planets: [],\n        };\n      }\n    \n      componentDidMount() {          \n          fetch(\"https://swapi.co/api/planets/\").then(results => {\n            return results.json();\n        }).then (data => { \n            let planets = data.results.map((pla) => {\n                return (\n                    <div key={pla.results} className=\"allFilms\">\n                        <h2>{pla.name}</h2>\n                        <p>Rotation Period: {pla.rotation_period}</p>\n                        <p>Orbital Period: {pla.orbital_period}</p>\n                        <p>Diameter: {pla.diameter}</p>\n                        <p>Climate: {pla.climate}</p>\n                        <p>Gravity: {pla.gravity}</p>\n                        <p>Terrain: {pla.terrain}</p>\n                    </div>\n                )\n            })\n            this.setState({planets: planets});\n            console.log(\"state\",this.state);\n        })\n      }\n    \n      render() {\n         // console.log(\"this is renderrr.... \" + (i++), this.state);\n        return (\n    <div className=\"container2\">\n        <div className=\"container1\">\n            {this.state.planets}\n        </div>\n    </div>\n        );\n        }\n    \n        shouldComponentUpdate() {\n            return true;\n        }\n}"]},"metadata":{},"sourceType":"module"}