{"ast":null,"code":"var _jsxFileName = \"/Users/ngraham/Documents/react-router-swapi/src/components/Films.js\";\nimport React from \"react\";\nimport ReactDOM from 'react-dom';\nvar i = 0;\nexport class Films extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      test: 1\n    };\n    fetch(\"https://swapi.co/api/films\").then(res => res.json()).then(data => {\n      this.setState({\n        films: data\n      });\n    }).catch(console.log);\n  }\n\n  getInitialState() {\n    return {\n      text: \"\"\n    };\n  }\n\n  render() {\n    console.log(\"this is renderrr.... \" + i++, this.state);\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"films..... \", this.props.test);\n  }\n\n  shouldComponentUpdate() {\n    return true;\n  } //console.log(\"compdidmount\");\n\n  /*\n          var test = Object.keys(this.state).map(function (key) {\n              return <option key={key} value={key}>{this.state[key]}</option>;\n          });*/\n  //}\n\n\n}\nReactDOM.render(React.createElement(Films, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/ngraham/Documents/react-router-swapi/src/components/Films.js"],"names":["React","ReactDOM","i","Films","Component","constructor","props","state","test","fetch","then","res","json","data","setState","films","catch","console","log","getInitialState","text","render","shouldComponentUpdate","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,IAAIC,CAAC,GAAG,CAAR;AAEA,OAAO,MAAMC,KAAN,SAAoBH,KAAK,CAACI,SAA1B,CAAoC;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE;AADG,KAAb;AAIAC,IAAAA,KAAK,CAAC,4BAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMG,IAAI,IAAI;AACZ,WAAKC,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAAEF;AAAT,OAAd;AACD,KAJD,EAKCG,KALD,CAKOC,OAAO,CAACC,GALf;AAMD;;AAEDC,EAAAA,eAAe,GAAG;AAChB,WAAO;AACHC,MAAAA,IAAI,EAAE;AADH,KAAP;AAGH;;AAECC,EAAAA,MAAM,GAAG;AACLJ,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAA2BhB,CAAC,EAAxC,EAA6C,KAAKK,KAAlD;AACF,WACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAe,KAAKD,KAAL,CAAWE,IAA1B,CADI;AAGC;;AAEDc,EAAAA,qBAAqB,GAAG;AACpB,WAAO,IAAP;AACH,GA9BsC,CAgC3C;;AACA;;;;AAKE;;;AAtCyC;AA2C3CrB,QAAQ,CAACoB,MAAT,CAAgB,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAA2BE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA3B","sourcesContent":["import React from \"react\";\nimport ReactDOM from 'react-dom';\n\nvar i = 0;\n\nexport class Films extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        test: 1,\n    };\n\n    fetch(\"https://swapi.co/api/films\")\n    .then(res => res.json())\n    .then(data => {\n      this.setState({ films: data });\n    })\n    .catch(console.log);\n  }\n\n  getInitialState() {\n    return {\n        text: \"\",\n    };\n}\n\n  render() {\n      console.log(\"this is renderrr.... \" + (i++), this.state);\n    return (\n<p>films..... {this.props.test}</p>\n    );\n    }\n\n    shouldComponentUpdate() {\n        return true;\n    }\n\n//console.log(\"compdidmount\");\n/*\n        var test = Object.keys(this.state).map(function (key) {\n            return <option key={key} value={key}>{this.state[key]}</option>;\n        });*/\n\n  //}\n\n\n}\n\nReactDOM.render(<Films />, document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}