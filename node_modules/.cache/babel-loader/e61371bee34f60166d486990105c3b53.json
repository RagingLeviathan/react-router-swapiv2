{"ast":null,"code":"var _jsxFileName = \"/Users/ngraham/Documents/react-router-swapi/src/components/Films.js\";\nimport React from \"react\";\nimport ReactDOM from 'react-dom';\nvar i = 0;\nexport class Films extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = [{}];\n  }\n\n  static getDerivedStateFromProps() {//do stuff here\n  }\n\n  render() {\n    if (typeof data[key] === 'string' || data[key] instanceof String) {}\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Films\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"testing.... \"));\n  }\n\n  generateData(data) {\n    const newData = Object.keys(data).reduce((result, currentKey) => {\n      if (typeof data[currentKey] === 'string' || data[currentKey] instanceof String) {\n        const elementToPush = generateElement(currentKey, data[currentKey]);\n        result.push(elementToPush);\n      } else {\n        const nested = generateData(data[currentKey]);\n        result.push(...nested);\n      }\n\n      return result;\n    }, []);\n    return newData;\n  }\n\n  componentDidMount() {\n    fetch(\"https://swapi.co/api/films/\").then(res => res.json()).then(data => {\n      this.setState({\n        films: data\n      });\n    }).catch(console.log);\n    console.log(\"compdidmount\");\n    /*\n            var test = Object.keys(this.state).map(function (key) {\n                return <option key={key} value={key}>{this.state[key]}</option>;\n            });*/\n  }\n\n  shouldComponentUpdate() {\n    //   console.log(this.state,\"info??\");\n    return true;\n  }\n\n  componentDidUpdate(prevProps, prevState) {}\n\n}","map":{"version":3,"sources":["/Users/ngraham/Documents/react-router-swapi/src/components/Films.js"],"names":["React","ReactDOM","i","Films","Component","constructor","props","state","getDerivedStateFromProps","render","data","key","String","generateData","newData","Object","keys","reduce","result","currentKey","elementToPush","generateElement","push","nested","componentDidMount","fetch","then","res","json","setState","films","catch","console","log","shouldComponentUpdate","componentDidUpdate","prevProps","prevState"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,IAAIC,CAAC,GAAG,CAAR;AAIA,OAAO,MAAMC,KAAN,SAAoBH,KAAK,CAACI,SAA1B,CAAoC;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,CAAC,EAAD,CAAb;AACD;;AAGD,SAAOC,wBAAP,GAAkC,CAChC;AACG;;AAELC,EAAAA,MAAM,GAAG;AACP,QAAI,OAAOC,IAAI,CAACC,GAAD,CAAX,KAAqB,QAArB,IAAiCD,IAAI,CAACC,GAAD,CAAJ,YAAqBC,MAA1D,EAAkE,CAEjE;;AACJ,WACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,CADH;AAQE;;AAEFC,EAAAA,YAAY,CAACH,IAAD,EAAO;AAChB,UAAMI,OAAO,GAAGC,MAAM,CAACC,IAAP,CAAYN,IAAZ,EAAkBO,MAAlB,CAAyB,CAACC,MAAD,EAASC,UAAT,KAAwB;AAC/D,UAAI,OAAOT,IAAI,CAACS,UAAD,CAAX,KAA4B,QAA5B,IAAwCT,IAAI,CAACS,UAAD,CAAJ,YAA4BP,MAAxE,EAAgF;AAC9E,cAAMQ,aAAa,GAAGC,eAAe,CAACF,UAAD,EAAaT,IAAI,CAACS,UAAD,CAAjB,CAArC;AACAD,QAAAA,MAAM,CAACI,IAAP,CAAYF,aAAZ;AACD,OAHD,MAGO;AACL,cAAMG,MAAM,GAAGV,YAAY,CAACH,IAAI,CAACS,UAAD,CAAL,CAA3B;AACAD,QAAAA,MAAM,CAACI,IAAP,CAAY,GAAGC,MAAf;AACD;;AACD,aAAOL,MAAP;AACD,KATe,EASb,EATa,CAAhB;AAUA,WAAOJ,OAAP;AACD;;AAGDU,EAAAA,iBAAiB,GAAG;AAElBC,IAAAA,KAAK,CAAC,6BAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMhB,IAAI,IAAI;AACZ,WAAKmB,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAAEpB;AAAT,OAAd;AACD,KAJD,EAKCqB,KALD,CAKOC,OAAO,CAACC,GALf;AAOJD,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA;;;;AAKG;;AAEDC,EAAAA,qBAAqB,GAAG;AACzB;AACK,WAAO,IAAP;AACH;;AAGDC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB,CAC1C;;AAhE0C","sourcesContent":["import React from \"react\";\nimport ReactDOM from 'react-dom';\n\nvar i = 0;\n\n\n\nexport class Films extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = [{}]  \n  }\n\n\n  static getDerivedStateFromProps() {\n    //do stuff here\n      } \n\n  render() {\n    if (typeof data[key] === 'string' || data[key] instanceof String) {\n\n    }\n return (\n    <div>\n        <h2>Films</h2>\n        <p>testing.... {\n            \n        }</p>\n    </div>\n)\n  }\n\n generateData(data) {\n    const newData = Object.keys(data).reduce((result, currentKey) => {\n      if (typeof data[currentKey] === 'string' || data[currentKey] instanceof String) {\n        const elementToPush = generateElement(currentKey, data[currentKey]);\n        result.push(elementToPush);\n      } else {\n        const nested = generateData(data[currentKey]);\n        result.push(...nested);\n      }\n      return result;\n    }, []);\n    return newData;\n  }\n\n\n  componentDidMount() {\n\n    fetch(\"https://swapi.co/api/films/\")\n    .then(res => res.json())\n    .then(data => {\n      this.setState({ films: data });\n    })\n    .catch(console.log);\n    \nconsole.log(\"compdidmount\");\n/*\n        var test = Object.keys(this.state).map(function (key) {\n            return <option key={key} value={key}>{this.state[key]}</option>;\n        });*/\n\n  }\n\n  shouldComponentUpdate() {\n //   console.log(this.state,\"info??\");\n      return true;\n  }\n\n\n  componentDidUpdate(prevProps, prevState) {\n}\n}"]},"metadata":{},"sourceType":"module"}