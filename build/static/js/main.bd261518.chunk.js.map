{"version":3,"sources":["components/Home.js","components/Films.js","components/People.js","components/Planets.js","components/Species.js","components/Starships.js","components/Vehicles.js","App.js","serviceWorker.js","index.js"],"names":["Home","className","React","Component","Films","fetchSWAPI","fetch","then","results","json","data","movies","map","pic","key","uuid","title","opening_crawl","setState","pictures","console","log","catch","error","number","message","finally","_isMounted","state","loading","this","type","color","height","width","offset","timeout","pageNum","People","props","next","pagination","peoples","Container","Row","Col","md","span","name","hair_color","eye_color","gender","page","Planets","planets","pla","rotation_period","orbital_period","diameter","climate","gravity","terrain","Species","species","spe","classification","Starships","starships","star","model","Vehicles","vehicles","veh","App","isClacked","mounted","Navbar","bg","expand","href","Toggle","aria-controls","Collapse","id","Nav","to","path","component","exact","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bd261518.chunk.js","sourcesContent":["import React from 'react'\n\nexport class Home extends React.Component {\n    render() {\n        return (\n            <div className=\"container2\">\n                <div className=\"container1\">\n                    <h1>Welcome to SWAPI-React!</h1>\n                    <div className=\"about\">\n                    <p>\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris aliquam, ante eget viverra laoreet, dolor mi elementum nibh, at malesuada massa lorem in nisi. Morbi mattis tellus at quam ultrices, efficitur consequat arcu egestas. In et nulla ac turpis facilisis commodo eu convallis lacus. Sed nec odio pulvinar mi pharetra ultrices id sed diam. Vestibulum euismod dui venenatis ante accumsan rhoncus. Nullam et leo et sem mattis mattis. Proin sollicitudin odio eu justo sollicitudin, eget mollis tellus eleifend. Praesent efficitur vulputate lectus, eget commodo ligula porta at. In libero augue, elementum non felis quis, auctor faucibus odio. In porttitor congue mauris, ut consequat turpis tristique non. Etiam sodales hendrerit libero non porttitor. Mauris venenatis semper ipsum ac egestas. Nunc laoreet egestas magna ac luctus. Donec fermentum rutrum massa. Ut porttitor malesuada odio in ultricies. Nam hendrerit venenatis lorem vel ultrices.\n                    </p>\n                    <p>\n                    Aliquam nisl nibh, consequat vitae mauris vitae, egestas semper urna. Mauris mauris orci, scelerisque a luctus at, hendrerit ut enim. Ut finibus, est eget venenatis aliquam, eros turpis gravida mauris, et venenatis augue odio ut dolor. Praesent id congue neque, vitae lacinia sapien. Mauris at elit erat. Nullam commodo lorem vel risus ullamcorper vestibulum. Aenean vel tempus ante. Cras ornare lobortis finibus. Donec hendrerit scelerisque felis, quis euismod turpis congue in. Maecenas vitae leo at urna egestas lobortis at sit amet mauris. Vivamus sodales, lectus a ullamcorper feugiat, urna dolor vulputate sapien, eu varius risus mauris eu massa. Nam in eros eu erat laoreet facilisis. Maecenas fermentum lacus enim. Nulla faucibus quis nulla congue condimentum.\n                    </p>\n                    <p>\n                    Aenean libero sapien, auctor eu nibh ac, mattis porta augue. Nulla in lobortis est. Donec mollis vehicula quam, vitae dignissim metus ultricies ac. Sed dictum tortor sit amet vestibulum posuere. Aliquam lobortis egestas risus vel tristique. Praesent sed tellus id risus venenatis imperdiet. Praesent sit amet leo eros. Suspendisse potenti. Sed ultrices purus eget euismod fermentum. Proin imperdiet ullamcorper nulla congue convallis. Phasellus vel mauris blandit, eleifend libero sit amet, sollicitudin neque. Nunc laoreet gravida tellus nec blandit. Donec vitae nunc vel sapien elementum tincidunt. In sapien est, hendrerit sit amet volutpat sed, accumsan vitae ante. Pellentesque suscipit tempor auctor. Nullam iaculis tristique orci, vel mattis lectus varius vel.\n                    </p>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Home;","import React from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport uuid from \"uuidv4\";\n\nexport class Films extends React.Component {\n  constructor() {\n    super();\n    this._isMounted = false;\n    this.state = {\n      pictures: [],\n      loading: true\n    };\n  }\n\n  fetchSWAPI = () => {\n    fetch(\"https://swapi.co/api/films\")\n      .then(results => {\n        return results.json();\n      })\n      .then(data => {\n        let movies = data.results.map(pic => {\n          return (\n            <div key={uuid()} className=\"allFilms\">\n              <h2>{pic.title}</h2>\n              <p>{pic.opening_crawl}</p>\n            </div>\n          );\n        });\n        this.setState({ pictures: movies });\n        console.log(movies, \"movies\");\n      })\n      .catch(function(error) {\n        console.log(error.number + \": \" + error.message);\n      })\n      .finally(function() {\n        console.log(\"finished\");\n      });\n  };\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.fetchSWAPI();\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    return (\n      <div className=\"container1 \">\n        <Loader\n          type=\"ThreeDots\"\n          color=\"\"\n          height={100}\n          width={460}\n          offset={100}\n          timeout={4000}\n          className=\"loaderCon col-centered spinz\"\n        />\n\n        <div className=\"container2\">{this.state.pictures}</div>\n      </div>\n    );\n  }\n\n  //console.log(\"compdidmount\");\n  /*\n            var test = Object.keys(this.state).map(function (key) {\n                return <option key={key} value={key}>{this.state[key]}</option>;\n            });*/\n\n  //}\n}\n\n//ReactDOM.render(<Films />, document.getElementById(\"root\"));\n//ReactDOM.render(<h2>howdy</h2>, document.getElementById(\"root\"));\n\n//OLD WAYY\n\n// import React from \"react\";\n// import ReactDOM from 'react-dom';\n\n// var c = 0; //film counter\n\n// export class Films extends React.Component {\n//   constructor(props) {\n//     super();\n//     this.state = {\n//         pictures: [],\n//     };\n// /*\n//     fetch(\"https://swapi.co/api/films\")\n//     .then(res => res.json())\n//     .then(data => {\n//       this.setState({ films: data });\n//     })\n//     .catch(console.log);*/\n// }\n\n// componentDidMount() {\n//   fetch(\"https://swapi.co/api/films\")\n//   .then(results => {\n//       return results.json();\n//   }). then (data => {\n//       let pictures = data.results.map((pic) => {\n//           return (\n//               <div key={c++} className=\"allFilms\">\n//                   <h2>{pic.title}</h2>\n//                   <p>{pic.opening_crawl}</p>\n//               </div>\n//           )\n//       })\n//       this.setState({pictures: pictures});\n//       console.log(\"state\",this.state);\n//       console.log(\"c is: \" + c);\n//   });\n// }\n\n// render() {\n//    // console.log(\"this is renderrr.... \" + (i++), this.state);\n//   return (\n// <div className=\"container2\">\n//   <div className=\"container1\">\n//       {this.state.pictures}\n//   </div>\n// </div>\n//   );\n//   }\n\n//   shouldComponentUpdate() {\n//       return true;\n//   }\n\n// //console.log(\"compdidmount\");\n// /*\n//       var test = Object.keys(this.state).map(function (key) {\n//           return <option key={key} value={key}>{this.state[key]}</option>;\n//       });*/\n\n// //}\n\n// }\n\n// //ReactDOM.render(<Films />, document.getElementById(\"root\"));\n// ReactDOM.render(<h2>howdy</h2>, document.getElementById(\"root\"));\n","import React from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport uuid from \"uuidv4\";\n//import { BrowserRouter as Router, Route } from \"react-router-dom\";\n//import { Link } from \"react-router-dom\";\n\nlet pageNum = 1;\n\nexport class People extends React.Component {\n  constructor(props) {\n    super();\n    this._isMounted = false;\n    this.state = {\n      peoples: [],\n      page: 0,\n      pagination: []\n    };\n  }\n\n  handlePageNext(page) {\n    if (this.page === null) this.page = 1;\n    this.page = +1;\n    pageNum++;\n    console.log(\"pageNum from handle func is: \" + pageNum);\n  }\n\n  fetchSWAPI = () => {\n    fetch(\"https://swapi.co/api/people/?page=\" + pageNum)\n      .then(results => {\n        return results.json();\n      })\n      .then(data => {\n        console.log(data);\n        let next = data.next;\n        console.log(\"next is : \", next);\n        //let str = next.slice(13);\n        this.setState({ pagination: next });\n        let peoples = data.results.map(pic => {\n          return (\n            <Container key={uuid()}>\n              <Row>\n                <Col\n                  md={{ span: 10, offset: 1 }}\n                  key={uuid()}\n                  className=\"allFilms align-self-center\"\n                >\n                  <h2>{pic.name}</h2>\n                  <p>Height: {pic.height}</p>\n                  <p>Hair Colour: {pic.hair_color}</p>\n                  <p>Eye colour: {pic.eye_color}</p>\n                  <p>Gender: {pic.gender}</p>\n                </Col>\n              </Row>\n            </Container>\n          );\n        });\n        this.setState({ peoples: peoples });\n      })\n      .catch(function(error) {\n        console.log(error.number + \": \" + error.message);\n      })\n      .finally(function() {\n        console.log(\"finished\");\n      });\n    //}\n  };\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.fetchSWAPI();\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    //creates virtual DOM... keep render() pure\n    return (\n      <div className=\"container1 \">\n        <Loader\n          type=\"ThreeDots\"\n          color=\"\"\n          height={100}\n          width={460}\n          offset={100}\n          timeout={4000}\n          className=\"loaderCon col-centered spinz\"\n        />\n        <div className=\"container2\">{this.state.peoples}</div>\n      </div>\n    );\n  }\n}\n\n/*        <Router>\n            <Link to={\"?page=\" + (this.state.pagination)} onClick={() => this.handlePageNext(this.state.page)}>Next page</Link>\n            </Router>\n            <Route path={\"?page=\" + (this.state.pagination)} component={People} key={uuid()}/>\n            */\n","import React from 'react'\n\nexport class Planets extends React.Component {\n    constructor(props) {\n        super();\n        this.state = {\n            planets: [],\n        };\n      }\n    \n      componentDidMount() {          \n          fetch(\"https://swapi.co/api/planets/\")\n          .then(results => {\n            return results.json();\n        }).then (data => { \n            let planets = data.results.map((pla) => {\n                return (\n                    <div key={pla.results} className=\"allFilms\">\n                        <h2>{pla.name}</h2>\n                        <p>Rotation Period: {pla.rotation_period}</p>\n                        <p>Orbital Period: {pla.orbital_period}</p>\n                        <p>Diameter: {pla.diameter}</p>\n                        <p>Climate: {pla.climate}</p>\n                        <p>Gravity: {pla.gravity}</p>\n                        <p>Terrain: {pla.terrain}</p>\n                    </div>\n                )\n            })\n            this.setState({planets: planets});\n            console.log(\"state\",this.state);\n        })\n      }\n    \n      render() {\n         // console.log(\"this is renderrr.... \" + (i++), this.state);\n        return (\n    <div className=\"container2\">\n        <div className=\"container1\">\n            {this.state.planets}\n        </div>\n    </div>\n        );\n        }\n    \n        shouldComponentUpdate() {\n            return true;\n        }\n}","import React from 'react'\n\nexport class Species extends React.Component {\n    constructor(props) {\n        super();\n        this.state = {\n            species: [],\n        };\n    /*\n        fetch(\"https://swapi.co/api/films\")\n        .then(res => res.json())\n        .then(data => {\n          this.setState({ films: data });\n        })\n        .catch(console.log);*/\n      }\n    \n      componentDidMount() {\n        fetch(\"https://swapi.co/api/species/\")\n        .then(results => {\n            return results.json();\n        }).then (data => { \n            let species = data.results.map((spe) => {\n                return (\n                    <div key={spe.results} className=\"allFilms\">\n                        <h2>{spe.name}</h2>\n                        <p>Classification: {spe.classification}</p>\n                    </div>\n                )\n            })\n            this.setState({species: species});\n            console.log(\"state\",this.state);\n        })\n      }\n    \n      render() {\n         // console.log(\"this is renderrr.... \" + (i++), this.state);\n        return (\n    <div className=\"container2\">\n        <div className=\"container1\">\n            {this.state.species}\n        </div>\n    </div>\n        );\n        }\n    \n        shouldComponentUpdate() {\n            return true;\n        }\n}","import React from 'react'\n\nexport class Starships extends React.Component {\n    constructor(props) {\n        super();\n        this.state = {\n            starships: [],\n        };\n    /*\n        fetch(\"https://swapi.co/api/films\")\n        .then(res => res.json())\n        .then(data => {\n          this.setState({ films: data });\n        })\n        .catch(console.log);*/\n      }\n    \n      componentDidMount() {\n        fetch(\"https://swapi.co/api/starships/\")\n        .then(results => {\n            return results.json();\n        }).then (data => { \n            let starships = data.results.map((star) => {\n                return (\n                    <div key={star.results} className=\"allFilms\">\n                        <h2>{star.name}</h2>\n                        <p>Model: {star.model}</p>\n                    </div>\n                )\n            })\n            this.setState({starships: starships});\n            console.log(\"state\",this.state);\n        })\n      }\n    \n      render() {\n         // console.log(\"this is renderrr.... \" + (i++), this.state);\n        return (\n    <div className=\"container2\">\n        <div className=\"container1\">\n            {this.state.starships}\n        </div>\n    </div>\n        );\n        }\n    \n        shouldComponentUpdate() {\n            return true;\n        }\n}","import React from 'react'\n\nexport class Vehicles extends React.Component {\n    constructor(props) {\n        super();\n        this.state = {\n            vehicles: [],\n        };\n    /*\n        fetch(\"https://swapi.co/api/films\")\n        .then(res => res.json())\n        .then(data => {\n          this.setState({ films: data });\n        })\n        .catch(console.log);*/\n      }\n    \n      componentDidMount() {\n        fetch(\"https://swapi.co/api/vehicles/\")\n        .then(results => {\n            return results.json();\n        }).then (data => { \n            let vehicles = data.results.map((veh) => {\n                return (\n                    <div key={veh.results} className=\"allFilms\">\n                        <h2>{veh.name}</h2>\n                        <p>Model: {veh.model}</p>\n                    </div>\n                )\n            })\n            this.setState({vehicles: vehicles});\n            console.log(\"state\",this.state);\n        })\n      }\n    \n      render() {\n         // console.log(\"this is renderrr.... \" + (i++), this.state);\n        return (\n    <div className=\"container2\">\n        <div className=\"container1\">\n            {this.state.vehicles}\n        </div>\n    </div>\n        );\n        }\n    \n        shouldComponentUpdate() {\n            return true;\n        }\n}","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { Home } from \"./components/Home\";\nimport { Films } from \"./components/Films\";\nimport { People } from \"./components/People\";\nimport { Planets } from \"./components/Planets\";\nimport { Species } from \"./components/Species\";\nimport { Starships } from \"./components/Starships\";\nimport { Vehicles } from \"./components/Vehicles\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport {Navbar, Nav} from 'react-bootstrap';\nimport uuid from 'uuidv4';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isClacked: false\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n}\n\ncomponentWillUnmount() {\n  this.mounted = false;\n}\n\n  render() {\n    return (\n      <Router>\n     <Navbar bg=\"light\" expand=\"lg\" className=\"navStyle\">\n  <Navbar href=\"/\" className=\"nameStyle\">SWAPI / React</Navbar>\n  <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n  <Navbar.Collapse id=\"basic-navbar-nav\">\n    <Nav className=\"mr-auto\">\n      <Link to=\"/\" className=\"nav-link\">\n          Home\n      </Link>\n      <Link to=\"/films\" className=\"nav-link\">\n          Films\n      </Link>\n      <Link to=\"/people\" className=\"nav-link\">\n          People\n      </Link>\n      <Link to=\"/planets\" className=\"nav-link\">\n          Planets\n      </Link>\n      <Link to=\"/species\" className=\"nav-link\">\n          Species\n      </Link>\n      <Link to=\"/starships\" className=\"nav-link\">\n          Starships\n      </Link>\n      <Link to=\"/vehicles\" className=\"nav-link\">\n          Vehicles\n      </Link>\n    </Nav>\n  </Navbar.Collapse>\n</Navbar>\n        <div className=\"container fill\">\n        \n\n          <Route path=\"/\" component={Home} exact  key={uuid()}/>\n\n          <Route path=\"/films\" component={Films} key={uuid()}/>\n\n          <Route path=\"/people\" component={People} key={uuid()}/>\n\n          <Route path=\"/planets\" component={Planets} key={uuid()}/>\n\n          <Route path=\"/species\" component={Species} key={uuid()}/>\n\n          <Route path=\"/starships\" component={Starships} key={uuid()}/>\n\n          <Route path=\"/vehicles\" component={Vehicles} key={uuid()}/>\n        </div>\n      </Router>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}