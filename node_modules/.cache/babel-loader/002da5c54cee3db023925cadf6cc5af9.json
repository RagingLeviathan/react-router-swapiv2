{"ast":null,"code":"var _jsxFileName = \"/Users/ngraham/Documents/react-router-swapi/src/components/Films.js\";\nimport React from \"react\";\nimport ReactDOM from 'react-dom';\nvar i = 0;\nconst myData = {\n  \"key1\": \"value1\",\n  \"key2\": \"value2\",\n  \"key3\": \"value3\",\n  \"key4\": {\n    \"k1\": \"val1\",\n    \"k2\": {\n      \"p1\": \"v1\",\n      \"p2\": \"v2\",\n      \"p3\": \"v3\"\n    }\n  }\n};\n\nconst generateElement = (key, value) => {\n  return React.createElement(\"div\", {\n    key: key,\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-xs-6 ins-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, key), React.createElement(\"div\", {\n    className: \"col-xs-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, value));\n};\n\nexport class Films extends React.Component {\n  /* constructor(props) {\n     super(props);\n     this.state = [{}]  \n   }*/\n  render() {\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"films.....\");\n  }\n  /*\n    componentDidMount() {\n  \n      fetch(\"https://swapi.co/api/films/\")\n      .then(res => res.json())\n      .then(data => {\n        this.setState({ films: data });\n      })\n      .catch(console.log);\n      */\n  //console.log(\"compdidmount\");\n\n  /*\n          var test = Object.keys(this.state).map(function (key) {\n              return <option key={key} value={key}>{this.state[key]}</option>;\n          });*/\n  //}\n\n\n}\nReactDOM.render(React.createElement(Films, {\n  data: myData,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/ngraham/Documents/react-router-swapi/src/components/Films.js"],"names":["React","ReactDOM","i","myData","generateElement","key","value","Films","Component","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,IAAIC,CAAC,GAAG,CAAR;AAEA,MAAMC,MAAM,GAAG;AACX,UAAQ,QADG;AAEX,UAAQ,QAFG;AAGX,UAAQ,QAHG;AAIX,UAAQ;AACN,UAAM,MADA;AAEN,UAAM;AACJ,YAAM,IADF;AAEJ,YAAM,IAFF;AAGJ,YAAM;AAHF;AAFA;AAJG,CAAf;;AAcE,MAAMC,eAAe,GAAG,CAACC,GAAD,EAAKC,KAAL,KAAe;AACrC,SACE;AAAK,IAAA,GAAG,EAAED,GAAV;AAAe,IAAA,SAAS,EAAC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCA,GAArC,CADF,EAEE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BC,KAA3B,CAFF,CADF;AAMD,CAPD;;AAUF,OAAO,MAAMC,KAAN,SAAoBP,KAAK,CAACQ,SAA1B,CAAoC;AAC1C;;;;AAKCC,EAAAA,MAAM,GAAG;AACP,WACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADI;AAGC;AACL;;;;;;;;;;AAUA;;AACA;;;;AAKE;;;AA3ByC;AAgC3CR,QAAQ,CAACQ,MAAT,CAAgB,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAEN,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyCO,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzC","sourcesContent":["import React from \"react\";\nimport ReactDOM from 'react-dom';\n\nvar i = 0;\n\nconst myData = {\n    \"key1\": \"value1\",\n    \"key2\": \"value2\",\n    \"key3\": \"value3\",\n    \"key4\": {\n      \"k1\": \"val1\",\n      \"k2\": {\n        \"p1\": \"v1\",\n        \"p2\": \"v2\",\n        \"p3\": \"v3\"\n      }\n    }\n  }\n  \n  const generateElement = (key,value) => {\n    return (\n      <div key={key} className=\"row\">\n        <div className=\"col-xs-6 ins-label\">{key}</div>\n        <div className=\"col-xs-6\">{value}</div>\n      </div>\n    );\n  }\n  \n\nexport class Films extends React.Component {\n /* constructor(props) {\n    super(props);\n    this.state = [{}]  \n  }*/\n\n  render() {\n    return (\n<p>films.....</p>\n    );\n    }\n/*\n  componentDidMount() {\n\n    fetch(\"https://swapi.co/api/films/\")\n    .then(res => res.json())\n    .then(data => {\n      this.setState({ films: data });\n    })\n    .catch(console.log);\n    */\n//console.log(\"compdidmount\");\n/*\n        var test = Object.keys(this.state).map(function (key) {\n            return <option key={key} value={key}>{this.state[key]}</option>;\n        });*/\n\n  //}\n\n\n}\n\nReactDOM.render(<Films data={myData} />, document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}