{"ast":null,"code":"var _jsxFileName = \"/Users/ngraham/Documents/react-router-swapi/src/components/People.js\";\nimport React from \"react\";\nlet c = 0; //counter\n\nlet pageNum = 1;\nexport class People extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      peoples: [],\n      page: null,\n      pagination: []\n    };\n    /*\n      fetch(\"https://swapi.co/api/films\")\n      .then(res => res.json())\n      .then(data => {\n        this.setState({ films: data });\n      })\n      .catch(console.log);*/\n  }\n\n  saySomething(something) {\n    console.log(something);\n  }\n\n  componentDidMount() {\n    /*\n         fetch(\"https://swapi.co/api/people/\")\n             .then(response => response.json())\n             .then(json => {\n              });*/\n    for (let i = 1; i <= 10; i++) {\n      fetch(\"https://swapi.co/api/people/?page=\" + pageNum++).then(results => {\n        return results.json();\n      }).then(data => {\n        let next = data.next;\n        let str = next.split('=')[1];\n        this.setState({\n          pagination: str\n        });\n        let peoples = data.results.map(pic => {\n          return React.createElement(\"div\", {\n            key: c++,\n            className: \"allFilms\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46\n            },\n            __self: this\n          }, React.createElement(\"h2\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47\n            },\n            __self: this\n          }, pic.name), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48\n            },\n            __self: this\n          }, \"Height: \", pic.height), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          }, \"Hair Colour: \", pic.blond), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          }, \"Eye colour: \", pic.eye_color), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51\n            },\n            __self: this\n          }, \"Gender: \", pic.gender));\n        });\n        this.setState({\n          peoples: peoples\n        }); //console.log(\"state\", this.state);\n      });\n    }\n  }\n\n  render() {\n    //creates virtual DOM... keep render() pure\n    return React.createElement(\"div\", {\n      className: \"container2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/people/?page=\" + this.state.pagination,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Next page\"), this.state.peoples));\n  }\n\n  shouldComponentUpdate() {\n    return true;\n  }\n\n}","map":{"version":3,"sources":["/Users/ngraham/Documents/react-router-swapi/src/components/People.js"],"names":["React","c","pageNum","People","Component","constructor","props","state","peoples","page","pagination","saySomething","something","console","log","componentDidMount","i","fetch","then","results","json","data","next","str","split","setState","map","pic","name","height","blond","eye_color","gender","render","shouldComponentUpdate"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAIC,CAAC,GAAG,CAAR,C,CAAW;;AACX,IAAIC,OAAO,GAAG,CAAd;AAEA,OAAO,MAAMC,MAAN,SAAqBH,KAAK,CAACI,SAA3B,CAAqC;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,EADE;AAEXC,MAAAA,IAAI,EAAE,IAFK;AAGXC,MAAAA,UAAU,EAAE;AAHD,KAAb;AAKA;;;;;;;AAOD;;AAEDC,EAAAA,YAAY,CAACC,SAAD,EAAY;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACH;;AAECG,EAAAA,iBAAiB,GAAG;AACvB;;;;;AAOK,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,EAArB,EAAyBA,CAAC,EAA1B,EAA8B;AAC5BC,MAAAA,KAAK,CAAC,uCAAqCf,OAAO,EAA7C,CAAL,CACGgB,IADH,CACQC,OAAO,IAAI;AACf,eAAOA,OAAO,CAACC,IAAR,EAAP;AACD,OAHH,EAIGF,IAJH,CAIQG,IAAI,IAAI;AACZ,YAAIC,IAAI,GAAGD,IAAI,CAACC,IAAhB;AACA,YAAIC,GAAG,GAAGD,IAAI,CAACE,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAAV;AACA,aAAKC,QAAL,CAAc;AAAEf,UAAAA,UAAU,EAAEa;AAAd,SAAd;AACA,YAAIf,OAAO,GAAGa,IAAI,CAACF,OAAL,CAAaO,GAAb,CAAiBC,GAAG,IAAI;AACpC,iBACE;AAAK,YAAA,GAAG,EAAE1B,CAAC,EAAX;AAAe,YAAA,SAAS,EAAC,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAK0B,GAAG,CAACC,IAAT,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAYD,GAAG,CAACE,MAAhB,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAiBF,GAAG,CAACG,KAArB,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAgBH,GAAG,CAACI,SAApB,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAYJ,GAAG,CAACK,MAAhB,CALF,CADF;AASD,SAVa,CAAd;AAWA,aAAKP,QAAL,CAAc;AAAEjB,UAAAA,OAAO,EAAEA;AAAX,SAAd,EAfY,CAgBZ;AACD,OArBH;AAsBD;AACJ;;AAGCyB,EAAAA,MAAM,GAAG;AACP;AACA,WACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,IAAI,EAAE,mBAAmB,KAAK1B,KAAL,CAAWG,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEK,KAAKH,KAAL,CAAWC,OAFhB,CADF,CADF;AAQD;;AAED0B,EAAAA,qBAAqB,GAAG;AACtB,WAAO,IAAP;AACD;;AAtEqC","sourcesContent":["import React from \"react\";\n\nlet c = 0; //counter\nlet pageNum = 1;\n\nexport class People extends React.Component {\n    constructor(props) {\n        super();\n        this.state = {\n          peoples: [],\n          page: null,\n          pagination: []\n        };\n        /*\n          fetch(\"https://swapi.co/api/films\")\n          .then(res => res.json())\n          .then(data => {\n            this.setState({ films: data });\n          })\n          .catch(console.log);*/\n      }\n\n      saySomething(something) {\n        console.log(something);\n    }\n    \n      componentDidMount() {\n   /*\n        fetch(\"https://swapi.co/api/people/\")\n            .then(response => response.json())\n            .then(json => {\n\n            });*/\n   \n        for (let i = 1; i <= 10; i++) {\n          fetch(\"https://swapi.co/api/people/?page=\"+pageNum++)\n            .then(results => {\n              return results.json();\n            })\n            .then(data => {\n              let next = data.next;\n              let str = next.split('=')[1];\n              this.setState({ pagination: str});\n              let peoples = data.results.map(pic => {\n                return (\n                  <div key={c++} className=\"allFilms\">\n                    <h2>{pic.name}</h2>\n                    <p>Height: {pic.height}</p>\n                    <p>Hair Colour: {pic.blond}</p>\n                    <p>Eye colour: {pic.eye_color}</p>\n                    <p>Gender: {pic.gender}</p>\n                  </div>\n                );\n              });\n              this.setState({ peoples: peoples});\n              //console.log(\"state\", this.state);\n            });\n        }\n    }\n      \n    \n      render() {\n        //creates virtual DOM... keep render() pure\n        return (\n          <div className=\"container2\">\n            <div className=\"container1\">\n                <a href={\"/people/?page=\" + this.state.pagination}>Next page</a>\n                {this.state.peoples}\n            </div>\n          </div>\n        );\n      }\n    \n      shouldComponentUpdate() {\n        return true;\n      }\n}\n"]},"metadata":{},"sourceType":"module"}