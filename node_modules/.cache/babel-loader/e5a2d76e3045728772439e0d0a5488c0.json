{"ast":null,"code":"var _jsxFileName = \"/Users/ngraham/Documents/react-router-swapi/src/components/Films.js\";\nimport React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport LoaderComp from \"./LoaderComp\";\nimport uuid from \"uuidv4\";\nexport class Films extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchSWAPI = () => {\n      fetch(\"https://swapi.co/api/films\").then(results => {\n        return results.json();\n      }).then(data => {\n        this.setState({\n          busy: false\n        });\n        let movies = data.results.map(pic => {\n          return React.createElement(Container, {\n            key: uuid(),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29\n            },\n            __self: this\n          }, React.createElement(Row, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30\n            },\n            __self: this\n          }, React.createElement(Col, {\n            className: \"allFilms\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31\n            },\n            __self: this\n          }, React.createElement(\"h2\", {\n            className: \"nameOfThing\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32\n            },\n            __self: this\n          }, pic.title), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33\n            },\n            __self: this\n          }, pic.opening_crawl))));\n        });\n        this.setState({\n          movies: movies\n        });\n      }).catch(function (error) {\n        console.log(error);\n      }).finally(function () {\n        console.log(\"finished fetch.\");\n      });\n    };\n\n    this._isMounted = false;\n    this.state = {\n      testProp: this.props.testProp,\n      movies: [],\n      busy: this.props.busy,\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.fetchSWAPI();\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(LoaderComp, {\n      busy: this.state.busy,\n      bird: this.state.bird,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, this.state.movies));\n  }\n\n}","map":{"version":3,"sources":["/Users/ngraham/Documents/react-router-swapi/src/components/Films.js"],"names":["React","Container","Row","Col","LoaderComp","uuid","Films","Component","constructor","props","fetchSWAPI","fetch","then","results","json","data","setState","busy","movies","map","pic","title","opening_crawl","catch","error","console","log","finally","_isMounted","state","testProp","loading","componentDidMount","componentWillUnmount","render","bird"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,OAAO,MAAMC,KAAN,SAAoBN,KAAK,CAACO,SAA1B,CAAoC;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAWnBC,UAXmB,GAWN,MAAM;AACjBC,MAAAA,KAAK,CAAC,4BAAD,CAAL,CACGC,IADH,CACQC,OAAO,IAAI;AACf,eAAOA,OAAO,CAACC,IAAR,EAAP;AACD,OAHH,EAIGF,IAJH,CAIQG,IAAI,IAAI;AACZ,aAAKC,QAAL,CAAc;AAAEC,UAAAA,IAAI,EAAE;AAAR,SAAd;AACA,YAAIC,MAAM,GAAGH,IAAI,CAACF,OAAL,CAAaM,GAAb,CAAiBC,GAAG,IAAI;AACnC,iBACE,oBAAC,SAAD;AAAW,YAAA,GAAG,EAAEf,IAAI,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,GAAD;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAI,YAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA6Be,GAAG,CAACC,KAAjC,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAID,GAAG,CAACE,aAAR,CAFF,CADF,CADF,CADF;AAUD,SAXY,CAAb;AAYA,aAAKN,QAAL,CAAc;AACZE,UAAAA,MAAM,EAAEA;AADI,SAAd;AAGD,OArBH,EAsBGK,KAtBH,CAsBS,UAASC,KAAT,EAAgB;AACrBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,OAxBH,EAyBGG,OAzBH,CAyBW,YAAW;AAClBF,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACD,OA3BH;AA4BD,KAxCkB;;AAEjB,SAAKE,UAAL,GAAkB,KAAlB;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,KAAKrB,KAAL,CAAWqB,QADV;AAEXZ,MAAAA,MAAM,EAAE,EAFG;AAGXD,MAAAA,IAAI,EAAE,KAAKR,KAAL,CAAWQ,IAHN;AAIXc,MAAAA,OAAO,EAAE;AAJE,KAAb;AAMD;;AAiCDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKJ,UAAL,GAAkB,IAAlB;AACA,SAAKlB,UAAL;AACD;;AAEDuB,EAAAA,oBAAoB,GAAG;AACrB,SAAKL,UAAL,GAAkB,KAAlB;AACD;;AAEDM,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAE,KAAKL,KAAL,CAAWZ,IAA7B;AAAmC,MAAA,IAAI,EAAE,KAAKY,KAAL,CAAWM,IAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6B,KAAKN,KAAL,CAAWX,MAAxC,CAFF,CADF;AAMD;;AA3DwC","sourcesContent":["import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport LoaderComp from \"./LoaderComp\";\nimport uuid from \"uuidv4\";\n\nexport class Films extends React.Component {\n  constructor(props) {\n    super(props);\n    this._isMounted = false;\n    this.state = {\n      testProp: this.props.testProp,\n      movies: [],\n      busy: this.props.busy,\n      loading: true\n    };\n  }\n\n  fetchSWAPI = () => {\n    fetch(\"https://swapi.co/api/films\")\n      .then(results => {\n        return results.json();\n      })\n      .then(data => {\n        this.setState({ busy: false });\n        let movies = data.results.map(pic => {\n          return (\n            <Container key={uuid()}>\n              <Row>\n                <Col className=\"allFilms\">\n                  <h2 className=\"nameOfThing\">{pic.title}</h2>\n                  <p>{pic.opening_crawl}</p>\n                </Col>\n              </Row>\n            </Container>\n          );\n        });\n        this.setState({\n          movies: movies\n        });\n      })\n      .catch(function(error) {\n        console.log(error);\n      })\n      .finally(function() {\n        console.log(\"finished fetch.\");\n      });\n  };\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.fetchSWAPI();\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    return (\n      <div className=\"container1\">\n        <LoaderComp busy={this.state.busy} bird={this.state.bird} />\n        <div className=\"container2\">{this.state.movies}</div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}