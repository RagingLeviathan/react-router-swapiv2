{"ast":null,"code":"import React from \"react\";\nimport Loader from 'react-loader-spinner';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport uuid from 'uuidv4';\n/*import { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\n\nlet pageNum = 1;\n\nexport class People extends React.Component {\n    constructor(props) {\n        super();\n        this._isMounted = false;\n        this.state = {\n          peoples: [],\n          page: 0,\n          pagination: []\n        };\n      }\n\n      saySomething(something) {\n        console.log(something);\n    }\n\n    handlePageNext(page) {\n        if(this.page === null)\n         this.page = 1 ;\n        this.page =+ 1;\n        pageNum++;\n        console.log(\"pageNum from handle func is: \" + pageNum);\n    }\n\n    fetchSWAPI = () => {\n      fetch(\"https://swapi.co/api/people/?page=\"+(pageNum))\n      .then(results => {\n        return results.json();\n      })\n      .then(data => {\n        console.log(data);\n        let next = data.next;\n        console.log(\"next is : \", next)\n        //let str = next.slice(13);\n        this.setState({ pagination: next});\n        let peoples = data.results.map(pic => {\n          return (\n            <Container key={uuid()}>\n            <Row>\n              <Col md={{ span: 10, offset: 1 }} key={uuid()} className=\"allFilms align-self-center\">\n              <h2>{pic.name}</h2>\n              <p>Height: {pic.height}</p>\n              <p>Hair Colour: {pic.hair_color}</p>\n              <p>Eye colour: {pic.eye_color}</p>\n              <p>Gender: {pic.gender}</p>\n              </Col>\n</Row>\n</Container>\n          );\n        });\n        this.setState({ peoples: peoples});\n        //console.log(\"state\", this.state);\n      })\n      .catch(function(error) { console.log(error.number + \": \" + error.message); }).finally(function() { console.log(\"finished\") });;\n  //}\n\n\n    }\n\n    \n      componentDidMount() {\n        this._isMounted = true;\n          this.fetchSWAPI();\n\n    }\n\n    componentWillUnmount() {\n      this._isMounted = false;\n    }\n      \n    \n      render() {\n        //creates virtual DOM... keep render() pure\n        return (\n          <div className=\"container1 \">\n              <Loader\n                      type=\"ThreeDots\"\n                      color=\"\"\n                      height={100}\n                      width={460}\n                      offset={100}\n                      timeout={4000}\n                      className=\"loaderCon col-centered spinz\"/>\n            <div className=\"container2\">\n      \n                {this.state.peoples}\n          </div>\n      </div>\n\n        );\n      }\n}\n\n/*        <Router>\n            <Link to={\"?page=\" + (this.state.pagination)} onClick={() => this.handlePageNext(this.state.page)}>Next page</Link>\n            </Router>\n            <Route path={\"?page=\" + (this.state.pagination)} component={People} key={uuid()}/>\n            */","map":{"version":3,"sources":["/Users/ngraham/Documents/react-router-swapi/src/components/People.js"],"names":["React","Loader","Container","Row","Col","uuid"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA","sourcesContent":["import React from \"react\";\nimport Loader from 'react-loader-spinner';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport uuid from 'uuidv4';\n/*import { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\n\nlet pageNum = 1;\n\nexport class People extends React.Component {\n    constructor(props) {\n        super();\n        this._isMounted = false;\n        this.state = {\n          peoples: [],\n          page: 0,\n          pagination: []\n        };\n      }\n\n      saySomething(something) {\n        console.log(something);\n    }\n\n    handlePageNext(page) {\n        if(this.page === null)\n         this.page = 1 ;\n        this.page =+ 1;\n        pageNum++;\n        console.log(\"pageNum from handle func is: \" + pageNum);\n    }\n\n    fetchSWAPI = () => {\n      fetch(\"https://swapi.co/api/people/?page=\"+(pageNum))\n      .then(results => {\n        return results.json();\n      })\n      .then(data => {\n        console.log(data);\n        let next = data.next;\n        console.log(\"next is : \", next)\n        //let str = next.slice(13);\n        this.setState({ pagination: next});\n        let peoples = data.results.map(pic => {\n          return (\n            <Container key={uuid()}>\n            <Row>\n              <Col md={{ span: 10, offset: 1 }} key={uuid()} className=\"allFilms align-self-center\">\n              <h2>{pic.name}</h2>\n              <p>Height: {pic.height}</p>\n              <p>Hair Colour: {pic.hair_color}</p>\n              <p>Eye colour: {pic.eye_color}</p>\n              <p>Gender: {pic.gender}</p>\n              </Col>\n</Row>\n</Container>\n          );\n        });\n        this.setState({ peoples: peoples});\n        //console.log(\"state\", this.state);\n      })\n      .catch(function(error) { console.log(error.number + \": \" + error.message); }).finally(function() { console.log(\"finished\") });;\n  //}\n\n\n    }\n\n    \n      componentDidMount() {\n        this._isMounted = true;\n          this.fetchSWAPI();\n\n    }\n\n    componentWillUnmount() {\n      this._isMounted = false;\n    }\n      \n    \n      render() {\n        //creates virtual DOM... keep render() pure\n        return (\n          <div className=\"container1 \">\n              <Loader\n                      type=\"ThreeDots\"\n                      color=\"\"\n                      height={100}\n                      width={460}\n                      offset={100}\n                      timeout={4000}\n                      className=\"loaderCon col-centered spinz\"/>\n            <div className=\"container2\">\n      \n                {this.state.peoples}\n          </div>\n      </div>\n\n        );\n      }\n}\n\n/*        <Router>\n            <Link to={\"?page=\" + (this.state.pagination)} onClick={() => this.handlePageNext(this.state.page)}>Next page</Link>\n            </Router>\n            <Route path={\"?page=\" + (this.state.pagination)} component={People} key={uuid()}/>\n            */"]},"metadata":{},"sourceType":"module"}